<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_FDLienCibil_L1L2'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_FDLienCibil_L1L2</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>void</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[//gross FD amount calc
AppFilterDeviation is some array of Deviation initially an array of Deviation;
anApplicant is some Applicant;
anDeviation is some Deviation initially an Deviation;
grossFDAmount is a real initially 0.0;
isFDFlag is a boolean initially false;
for each Applicant in blazeMessage.request.application.applicants do{
	anApplicant=it; 
    if(anApplicant.FDDetails is known) then { 
		for each FDDetails in anApplicant.FDDetails do{
			if(it.amount > 0)then{
				grossFDAmount+=it.amount;
		 	}
		}        
	}
   print("GrossFD=="grossFDAmount);
}	
if(grossFDAmount>(blazeMessage.request.application.loanDetails.loanAmount)*0.5 and (grossFDAmount < blazeMessage.request.application.loanDetails.loanAmount))then{
	isFDFlag=true;
}
if(blazeMessage.request.application.schemeGroup is (known and available) and  blazeMessage.request.application.schemeGroup = "46" and isFDFlag = true)then{
	for each Deviation in blazeMessage.response.applicationDecision.deviations such that (it is not null and it is known) do {
		AppFilterDeviation.append(it);
	}
	for each Deviation in AppFilterDeviation do {
		if(it.overrideLevel is known and it.overrideLevel = ("L1" or "L2") and it.ruleID=("Cibil004" or "Cibil005" or "Cibil007"))then{
			anDeviation.ruleID="Cibil021";
			anDeviation.ruleName="FD Lien";
			anDeviation.overrideLevel="L99";
			anDeviation.decisionResult="REFER";
			anDeviation.reasonText="100% FD funding not allowed for Low Cibil Score";
			fn_AppendDeviations(anDeviation);
		}
	}			
}]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='XgtC41'>
    <instance ref='ParameterNameVH'>
     <value>blazeMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>