<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_bankingBasedLTVCal'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_bankingBasedLTVCal</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>void</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[print("Entering bankingBasedLTVCal");
aDeviation is some Deviation initially an Deviation;
score is some Score ;
score = blazeMessage.response.applicationDecision.scorecardResult[0];

if(blazeMessage.request.application.schemeGroup is equal to (ignoring case)"20"  )then{
  //Only Banking LTV Rules
   print("scheme before  "blazeMessage.request.application.scheme);
  	if (blazeMessage.request.application.scheme is equal to (ignoring case)"50")then{
       print("scheme 50 "blazeMessage.request.application.scheme);
      if (blazeMessage.response.applicationDecision.responseCode is known and blazeMessage.response.applicationDecision.responseCode="GREEN" and
          theBlazeMessageBT.standardLtv is known and theBlazeMessageBT.standardLtv >71)then{
     		//aDeviation.ruleID="GreenLTV"; 
	 	    aDeviation.reasonCode = "50000";
	  		aDeviation.overrideLevel="L99";
	  		aDeviation.decisionResult="REJECT";
	  		aDeviation.reasonText="REJ-LTV more than Norms ";
	  		fn_AppendDeviations(aDeviation);
      }else if(blazeMessage.response.applicationDecision.responseCode is equal to ("AMBER" or "RED") and 
               theBlazeMessageBT.standardLtv >66 and theBlazeMessageBT.standardLtv <=71)then{
        	//aDeviation.ruleID="GreenLTV"; 
	  		aDeviation.reasonCode ="50001";
	  		aDeviation.overrideLevel="L1";
	  		aDeviation.decisionResult="DEVIATION";
	  		aDeviation.reasonText ="LTV more than Norms ".
	  		fn_AppendDeviations(aDeviation);
      }else if(blazeMessage.response.applicationDecision.responseCode is equal to ("AMBER" or "RED")  and  theBlazeMessageBT.standardLtv >71)then{
		// aDeviation.ruleID="GreenLTV"; 
	  	aDeviation.reasonCode="50002";
	  	aDeviation.overrideLevel = "L99";
	  	aDeviation.decisionResult="REJECT";
	  	aDeviation.reasonText = "REJ-LTV more than Norms ".
	  	fn_AppendDeviations(aDeviation);
      }
      
    }
  //Banking ownrship 
  if (blazeMessage.request.application.scheme is equal to (ignoring case)"46")then{
    print("scheme 46 "blazeMessage.request.application.scheme);
     if (blazeMessage.response.applicationDecision.responseCode is known and blazeMessage.response.applicationDecision.responseCode="GREEN" and
          theBlazeMessageBT.standardLtv is known and theBlazeMessageBT.standardLtv >81)then{
     		//aDeviation.ruleID="GreenLTV"; 
	 	    aDeviation.reasonCode = "50005";
	  		aDeviation.overrideLevel="L99";
	  		aDeviation.decisionResult="REJECT";
	  		aDeviation.reasonText="REJ-LTV more than Norms ";
	  		fn_AppendDeviations(aDeviation);
      }else  if(blazeMessage.response.applicationDecision.responseCode is known and 
                blazeMessage.response.applicationDecision.responseCode is equal to ("AMBER" or "RED")  and  
       			theBlazeMessageBT.standardLtv is known  and theBlazeMessageBT.standardLtv >=76 and  
       			theBlazeMessageBT.standardLtv <=81)then{
      		aDeviation.reasonCode ="50003";
	  		aDeviation.overrideLevel="L1";
	  		aDeviation.decisionResult="DEVIATION";
	  		aDeviation.reasonText ="LTV more than Norms ".
	  		fn_AppendDeviations(aDeviation);
      
    }else if(blazeMessage.response.applicationDecision.responseCode is known and 
             blazeMessage.response.applicationDecision.responseCode  is equal to ("AMBER" or "RED")  and  
      		 theBlazeMessageBT.standardLtv is known and theBlazeMessageBT.standardLtv >81)then{
			aDeviation.reasonCode="50004";
	  		aDeviation.overrideLevel = "L99";
	  		aDeviation.decisionResult="REJECT";
	  		aDeviation.reasonText = "REJ-LTV more than Norms ".
	  		fn_AppendDeviations(aDeviation);      
    }
  }
}]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='Z6dYJK'>
    <instance ref='ParameterNameVH'>
     <value>blazeMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>