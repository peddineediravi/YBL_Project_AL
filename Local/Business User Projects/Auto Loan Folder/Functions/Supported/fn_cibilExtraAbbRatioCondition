<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_uclCibilExtraAbbRatioCondition'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_uclCibilExtraAbbRatioCondition</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>void</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[print("Entering fn_uclCibilExtraAbbRatioCondition");
anDeviation is some Deviation initially an Deviation;
tempArray is some array of string initially an array of string;
AppFilterDeviation is some array of Deviation initially an array of Deviation;
anApplicant is some Applicant;
applicantCount is a integer initially 0;
nonSalariedEmp is a  integer initially 0;
isAllapplicantsnonSal is a boolean  initially false;

for each Deviation in blazeMessage.response.applicationDecision.deviations such that (it is not null and it is known) do {
  AppFilterDeviation.append(it);
}

for each Applicant in blazeMessage.request.application.applicants do{
  	anApplicant =it;
  		applicantCount=applicantCount+1;
  			if(it.customerSegment is  (known and available) and  it.customerSegment <>("1"))then{
              			nonSalariedEmp = nonSalariedEmp+1
            }
}
print("applicantCount="applicantCount";nonSalariedEmp="nonSalariedEmp);
if(applicantCount=nonSalariedEmp)then{
  	isAllapplicantsnonSal =true ;
}
print("  theBlazeMessageBT.appLevelCibilScore==="  theBlazeMessageBT.appLevelCibilScore);
if (isAllapplicantsnonSal =true and theBlazeMessageBT.appLevelCibilScore is  (known and available) and  theBlazeMessageBT.appLevelCibilScore <731)then{
  			 for each Deviation in AppFilterDeviation do {
               			
               			   if(it.ruleID is known and it.ruleID =("UsedRefRep003"))then{
                             		it.decisionResult="Deviation";
                             		it.overrideLevel="L3";
                             		it.reasonText="Banking - ABB less than 1 times";
                             	print(it.ruleID"t.ruleID inside uclCibilExtraAbbRatioCondition");
                           }
               			   if(it.ruleID is known and it.ruleID =("USED_Premium005"))then{
                             		it.decisionResult="Deviation";
                             		it.overrideLevel="L3";
                             print(it.ruleID"t.ruleID inside uclCibilExtraAbbRatioCondition");
                           }
               			   if(it.ruleID is known and it.ruleID =("Normal002"))then{
                             		it.decisionResult="Deviation";
                             		it.overrideLevel="L3";
                             print(it.ruleID"t.ruleID inside uclCibilExtraAbbRatioCondition");
                           }
               				 if(it.ruleID is known and it.ruleID =("USEDRefinanceMultiplier003"))then{
                             		it.decisionResult="Deviation";
                             		it.overrideLevel="L3";
                               print(it.ruleID"t.ruleID inside uclCibilExtraAbbRatioCondition");
                           }
               				 if(it.ruleID is known and it.ruleID =("RefInc004"))then{
                             		it.decisionResult="Deviation";
                             		it.overrideLevel="L3";
                               print(it.ruleID"t.ruleID inside uclCibilExtraAbbRatioCondition");
                           }
               			 if(it.ruleID is known and it.ruleID =("USEDBanking008"))then{
                             		it.decisionResult="Deviation";
                           			it.reasonText="ABB Norms not met";
                             		it.overrideLevel="L3";
                           print(it.ruleID"t.ruleID inside uclCibilExtraAbbRatioCondition");
                           }
               			 if(it.ruleID is known and it.ruleID =("USEDBanking007"))then{
                             		it.decisionResult="Deviation";
                           			it.reasonText="Banking - ABB Norms not met";
                             		it.overrideLevel="L3";
                           print(it.ruleID"t.ruleID inside uclCibilExtraAbbRatioCondition");
                           }
               
 				}
}
if (isAllapplicantsnonSal =true and theBlazeMessageBT.appLevelCibilScore is  (known and available) and  theBlazeMessageBT.appLevelCibilScore >730)then{
  			 for each Deviation in AppFilterDeviation do {
               	print(it.ruleID"t.ruleID inside uclCibilExtraAbbRatioCondition");
                if(it.ruleID is known and it.ruleID =("USEDBanking008"))then{
                             		it.decisionResult="Deviation";
                           			it.reasonText="PRIME-ABB Norms not met";
                             		it.overrideLevel="L2";
                  print(it.ruleID"t.ruleID inside uclCibilExtraAbbRatioCondition");
                           }
               			 if(it.ruleID is known and it.ruleID =("USEDBanking007"))then{
                             		it.decisionResult="Deviation";
                           			it.reasonText="PRIME-Banking - ABB Norms not met";
                             		it.overrideLevel="L2";
                           print(it.ruleID"t.ruleID inside uclCibilExtraAbbRatioCondition");
                           }
             }
}
]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='2rw0NA'>
    <instance ref='ParameterNameVH'>
     <value>blazeMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>