<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_bankStatementoutwarchequeCalc'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_bankStatementoutwarchequeCalc</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>integer</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[tempStmtDetails is some StatementDetails;
tempBankDetails is some BankDetails.
coutStmt is an integer initially 0;
sumoutwardCheque_3M is a integer initially 0;
for each BankDetails in blazeApplicant.bankDetails do {
  tempBankDetails =it.
  for each StatementDetails in tempBankDetails.bankStatements do   {
  	  tempStmtDetails = it.
           if(tempStmtDetails is (known and available) and coutStmt<noOfMonths) then       {
          sumoutwardCheque_3M=sumoutwardCheque_3M+it.outwardMonthlyChequeReturns;
          	 coutStmt = coutStmt+1;
          }
     }
  coutStmt=0;
}
 return sumoutwardCheque_3M;


]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='MI2Vcb'>
    <instance ref='ParameterNameVH'>
     <value>blazeApplicant</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeApplicant</value>
    </instance>
   </item>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='359oiW'>
    <instance ref='ParameterNameVH'>
     <value>noOfMonths</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>integer</value>
    </instance>
   </item>
  </instance-list>
 </instance>
 <instance ref='UniqueInstanceNameVH'>
  <value>fn_bankStatementoutwarchequeCalc1</value>
 </instance>
</instantiation>