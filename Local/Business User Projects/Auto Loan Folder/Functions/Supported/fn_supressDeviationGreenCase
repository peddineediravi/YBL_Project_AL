<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_supressDeviationGreenCase'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_supressDeviationGreenCase</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>void</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[print("fn_supressDeviationGreenCase in side");
anApplicant is some Applicant;
score is some Score initially a Score;
AppFilterDeviation is some array of Deviation initially an array of Deviation;
STPFilterDeviation is some array of Deviation initially an array of Deviation;
ExcludeFilterDeviation is some array of Deviation initially an array of Deviation;
count is a integer initially 0;

for each Deviation in blazeMessage.response.applicationDecision.deviations such that (it is not null and it is known) do {
 	AppFilterDeviation.append(it);
}
if ((blazeMessage.response.applicationDecision.responseCode is (known and available) and 
    blazeMessage.response.applicationDecision.responseCode =(ignoring case)"GREEN" ) or 
  		((theBlazeMessageBT.appLevelCibilScore  is (known and available) and theBlazeMessageBT.appLevelCibilScore =-1) and 
           (theBlazeMessageBT.actualLtv  is (known and available) and  theBlazeMessageBT.actualLtv <=80)))then{
              for each Deviation in AppFilterDeviation do {
                print("it.ruleID===supress"it.ruleID);
                if(it.reasonCode="41000")then{
                  	it.ruleID="41000";
                }
                  print("it.ruleID===supress"it.ruleID);
               if(it.ruleID  is  (known and available)  and it.ruleID<>"KerelaNIP025")then{
                 STPFilterDeviation.append(it)
               }else{
 					count=count+1;
				}
                }
                 
            }
        
  

if(count>0 and STPFilterDeviation.count =0)then{
		blazeMessage.response.applicationDecision.deviations = ExcludeFilterDeviation as a array of Deviation;
}else if STPFilterDeviation.count = 0 then {
	blazeMessage.response.applicationDecision.deviations = AppFilterDeviation as a array of Deviation;
	}else if STPFilterDeviation.count > 0 then {
		blazeMessage.response.applicationDecision.deviations = STPFilterDeviation as a array of Deviation;
	}]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='3RINGA'>
    <instance ref='ParameterNameVH'>
     <value>blazeMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>