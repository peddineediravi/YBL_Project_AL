<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_CPVNCL'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_CPVNCL</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>boolean</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[isAnyTrue is a boolean initially false;
anApplicant is some Applicant;
for each Applicant in thMessage.request.application.applicants
 do{
  anApplicant = it;
//first rule
if(theBlazeMessageBT.ABBEMIRatio < 1)then {
  isAnyTrue = true;
}
//second rule 
for each Deviation in thMessage.response.applicationDecision.deviations do {
    if( it.ruleID is known and it.ruleID =("Cibil004" or "Cibil005" ))then {
        isAnyTrue = true;
    }
}
//third rule 
if(it.age is known and it.age < 30) then{
    isAnyTrue = true;
}
//fourth rule 
if(thMessage.request.application.specialTieup is (known and available) and thMessage.request.application.specialTieup = (ignoring case)("40220210" or "40220212"))then{
	isAnyTrue = true ;
}
 //fifth rule 
if(it.customerSegment is (known and available) and it.customerSegment =("10006" or "10007" or "10005"))then {
	 isAnyTrue = true ; 
}
//sixth rule 
if(anApplicant.addresses is known and anApplicant.addresses.count>0)then{ 
  for each Address in anApplicant.addresses such that(it.addressType is known and it.addressType is equal to(ignoring case) "RESICUMOFFICE") do{
        isAnyTrue = true;
  }
}
}
return isAnyTrue;]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='FOLoZ7'>
    <instance ref='ParameterNameVH'>
     <value>thMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>