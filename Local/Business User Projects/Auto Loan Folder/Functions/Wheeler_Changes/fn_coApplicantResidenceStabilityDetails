<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_coApplicantResidenceStabilityDetails'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_coApplicantResidenceStabilityDetails</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>void</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[print("fn_CoapplicantResidenceStabilityDetails Entering");
anApplicant is some Applicant;
tempYearsAtCurrentAddress is a integer initially 0;
tempmonthsAtCurrentAddress  is a integer initially 0;

//Co-Applicant 
for each Applicant in ablazeMessage.request.application.applicants such that (it.applicantType is (known and available) and it.applicantType <>"P" )do{
  	anApplicant=it;
  if(it.customerSegment  is (known and available) and  it.customerSegment ="1")then{
      print("entering CoApplicant");
   	 for each Address in anApplicant.addresses do{
        if(it.addressType  is (known and available) and it.addressType=(ignoring case)"CURRES")then{
          		if(it.propertyType  is (known and available) and  it.propertyType=(ignoring case)("O" or "OP" or "OWN_COAP" or "OWNERSHI") )then{
                  		if(it.yearsAtCurrentAddress is (known and available))then{
                          	tempYearsAtCurrentAddress=it.yearsAtCurrentAddress;
                        }else 	if(it.yearsAtCurrentAddress = (unknown or  unavailable))then{
                          tempYearsAtCurrentAddress =0;
                        }
                  		if(it.monthsAtCurrentAddress is (known and available))then{
                           tempmonthsAtCurrentAddress=it.monthsAtCurrentAddress;
                        }else if(it.monthsAtCurrentAddress = unknown )then{
                          tempmonthsAtCurrentAddress=0;
                        }
                  		    print("tempYearsAtCurrentAddress"tempYearsAtCurrentAddress"tempmonthsAtCurrentAddress"tempmonthsAtCurrentAddress);
       						fn_AppendActionMessage("Co - Applicant is residing in owned house from "tempYearsAtCurrentAddress" years " tempmonthsAtCurrentAddress" months");
                }
            }
    }
}else  if(it.customerSegment  is (known and available) and  it.customerSegment <>"1")then{
  print("entering 2");
   	 for each Address in anApplicant.addresses do{
        if(it.addressType  is (known and available) and it.addressType=(ignoring case)"CURRES")then{
          		if(it.propertyType  is (known and available) and  it.propertyType=(ignoring case)("O" or "OP" or "OWN_COAP" or "OWNERSHI") )then{
                  		if(it.yearsAtCurrentAddress is (known and available))then{
                          	tempYearsAtCurrentAddress=it.yearsAtCurrentAddress;
                        }else 	if(it.yearsAtCurrentAddress = (unknown or  unavailable))then{
                          tempYearsAtCurrentAddress =0;
                        }
                  		if(it.monthsAtCurrentAddress is (known and available))then{
                           tempmonthsAtCurrentAddress=it.monthsAtCurrentAddress;
                        }else if(it.monthsAtCurrentAddress = unknown )then{
                          tempmonthsAtCurrentAddress=0;
                        }
                  		    print("tempYearsAtCurrentAddress"tempYearsAtCurrentAddress"tempmonthsAtCurrentAddress"tempmonthsAtCurrentAddress);
       						fn_AppendActionMessage("Co - Applicant is residing in owned house from "tempYearsAtCurrentAddress" years " tempmonthsAtCurrentAddress" months");
                }
            }
    }
}
}]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='Fsph7K'>
    <instance ref='ParameterNameVH'>
     <value>ablazeMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>