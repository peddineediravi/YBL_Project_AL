<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='DSG71szD5AH5G0pcZCfjmcoPvq0' name='noLiabilities'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='nameVH'>
  <value>noLiabilities</value>
 </instance>
 <instance ref='typeVH'>
  <value>boolean</value>
 </instance>
 <instance ref='descriptionVH'>
  <value></value>
 </instance>
 <instance ref='termPropertyVH'>
 </instance>
 <instance ref='isNeededEventRuleVH'>
  <instance ref='__ENTITY_PROPERTIES__VH__'>
  </instance>
  <instance ref='calculationVH'>
   <value><![CDATA[theBlazeMessageBT.noLiabilities = false;
COAppliabilities is an integer initially 0;
Appliabilities is an integer initially 0;
anApplicant is some Applicant;

for each Applicant in theBlazeMessageBT.termSetInput.request.application.applicants do{
	anApplicant = it;
  print("count anApplicant.liabilities ="anApplicant.liabilities.count);
  if(anApplicant.applicantType is (known and available) and anApplicant.applicantType="P")then{
    if(anApplicant.liabilities.count=0)then{
      Appliabilities=Appliabilities+1;
    }
   }
  if(anApplicant.applicantType is (known and available) and anApplicant.applicantType<>"P")then{
    if(anApplicant.liabilities.count=0)then{
     COAppliabilities=COAppliabilities+1;
    }
   }
}
print("Appliabilities==="Appliabilities);
print("COAppliabilities==="COAppliabilities);

if(Appliabilities>=1 and theBlazeMessageBT.termSetInput.request.application.applicants.count=1 )then{
  theBlazeMessageBT.noLiabilities = true;
} else if(Appliabilities>=1 and COAppliabilities>=1 and theBlazeMessageBT.termSetInput.request.application.applicants.count>1 )then{
  theBlazeMessageBT.noLiabilities = true;
}
print("theBlazeMessageBT noLiabilities==="theBlazeMessageBT.noLiabilities );]]></value>
  </instance>
 </instance>
 <instance ref='constraintContainerVH'>
  <instance-selection ref='constraintVH'>
   <item template='Atv03JffIeVVgsPZppyIx4mkGHC.template5' id='z9MBhI'>
    <instance ref='fromVH'>
     <value></value>
    </instance>
    <instance ref='toVH'>
     <value></value>
    </instance>
    <instance ref='constraintNameVH'>
     <value>Range</value>
    </instance>
    <instance ref='constraintEntriesVH'>
    </instance>
   </item>
  </instance-selection>
  <instance ref='termTypeConstraintTemplateAssocVH'>
   <value>Atv03JffIeVVgsPZppyIx4mkGHC.template5</value>
  </instance>
 </instance>
</instantiation>