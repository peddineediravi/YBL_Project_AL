<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='DSG71szD5AH5G0pcZCfjmcoPvq0' name='avgCreditandStmt'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='nameVH'>
  <value>avgCreditandStmt</value>
 </instance>
 <instance ref='typeVH'>
  <value>real</value>
 </instance>
 <instance ref='descriptionVH'>
  <value></value>
 </instance>
 <instance ref='termPropertyVH'>
 </instance>
 <instance ref='isNeededEventRuleVH'>
  <instance ref='__ENTITY_PROPERTIES__VH__'>
  </instance>
  <instance ref='calculationVH'>
   <value><![CDATA[theBlazeMessageBT.avgCreditandStmt =0;
aBankDetails is some BankDetails;
aStatement is some StatementDetails;
stmtCount is a integer initially 0;
tempCredits is a integer initially 0;
anApplicant is some Applicant;
for each Applicant in theBlazeMessageBT.termSetInput.request.application.applicants such that(it.bankDetails is (known and available)) do{
  anApplicant = it;
for each BankDetails  in anApplicant.bankDetails such that(it.bankStatements.count>0 and it.bankStatements is (known and available)) do{
	aBankDetails=it;
	//aBankDetails.noOfCredits=0;
		//fn_SortingStatements(aBankDetails);
  
			for each StatementDetails in aBankDetails.bankStatements do{
	  stmtCount=stmtCount+1;
				if(it.noOfMonthlyCredits is (known and available) )then{
	  
					tempCredits=it.noOfMonthlyCredits;
				}
			}
						//aBankDetails.noOfCredits=aBankDetails.noOfCredits/stmtCount;
}
}
if(stmtCount is (known and available) and stmtCount>0)then{
	theBlazeMessageBT.avgCreditandStmt=tempCredits/stmtCount;
  print("Final Amount BT+++++"theBlazeMessageBT.avgCreditandStmt);
}]]></value>
  </instance>
 </instance>
 <instance ref='constraintContainerVH'>
  <instance-selection ref='constraintVH'>
   <item template='Atv03JffIeVVgsPZppyIx4mkGHC.template5' id='6S8lVO'>
    <instance ref='fromVH'>
     <value></value>
    </instance>
    <instance ref='toVH'>
     <value></value>
    </instance>
    <instance ref='constraintNameVH'>
     <value>Range</value>
    </instance>
    <instance ref='constraintEntriesVH'>
    </instance>
   </item>
  </instance-selection>
  <instance ref='termTypeConstraintTemplateAssocVH'>
   <value>Atv03JffIeVVgsPZppyIx4mkGHC.template5</value>
  </instance>
 </instance>
</instantiation>