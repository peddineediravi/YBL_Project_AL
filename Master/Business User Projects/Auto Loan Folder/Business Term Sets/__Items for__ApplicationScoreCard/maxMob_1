<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='DSG71szD5AH5G0pcZCfjmcoPvq0' name='maxMob'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='nameVH'>
  <value>maxMob</value>
 </instance>
 <instance ref='typeVH'>
  <value>integer</value>
 </instance>
 <instance ref='descriptionVH'>
  <value></value>
 </instance>
 <instance ref='termPropertyVH'>
 </instance>
 <instance ref='isNeededEventRuleVH'>
  <instance ref='__ENTITY_PROPERTIES__VH__'>
  </instance>
  <instance ref='calculationVH'>
   <value><![CDATA[tempMaxMob is an integer initially -111111;
anApplicant is some Applicant;
for each Applicant in theApplicationScoreCard.termSetInput.request.application.applicants such that(it.applicantType is known and it.applicantType is equal to "P" and it.multiBureauReport is known and it.multiBureauReport.cibilResponse is known and it.multiBureauReport.cibilResponse.scores is known and it.multiBureauReport.cibilResponse.scores.count>0)
do{
  			anApplicant = it;
		  if(at least 1 ScoreSegment in  anApplicant.multiBureauReport.cibilResponse.scores satisfy(it.scoreName is known and it.scoreName is equal to (ignoring case)"CIBIL" and it.score is known and  it.score > 5))
          then{
					currentDate is a date initially calendar().currentDate(); 
					mobList is some array of integer initially an array of integer;
					monthsDuration is a duration initially 1 month;
					if(anApplicant.multiBureauReport.cibilResponse.accounts is known and anApplicant.multiBureauReport.cibilResponse.accounts.count >0)then{
                      		for each Account in anApplicant.multiBureauReport.cibilResponse.accounts such that(it.dateOpenedOrDisbursed is known)
                  		  do{
			  						monthsDuration=currentDate.subtractInMonths(it.dateOpenedOrDisbursed);
			  						mobList.append(monthsDuration.months);
					  		}
                    }
						tempMaxMob=mobList.max;
			   }
}
it.maxMob = tempMaxMob;
theApplicationScoreCard.termSetInput.charNameToCharVal["Length Of Relationship on Bureau( in Months)"] = it.maxMob as a string;]]></value>
  </instance>
 </instance>
 <instance ref='constraintContainerVH'>
  <instance-selection ref='constraintVH'>
   <item template='Atv03JffIeVVgsPZppyIx4mkGHC.template5' id='T3eXjN'>
    <instance ref='fromVH'>
     <value></value>
    </instance>
    <instance ref='toVH'>
     <value></value>
    </instance>
    <instance ref='constraintNameVH'>
     <value>Range</value>
    </instance>
    <instance ref='constraintEntriesVH'>
    </instance>
   </item>
  </instance-selection>
  <instance ref='termTypeConstraintTemplateAssocVH'>
   <value>Atv03JffIeVVgsPZppyIx4mkGHC.template5</value>
  </instance>
 </instance>
</instantiation>