<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='DSG71szD5AH5G0pcZCfjmcoPvq0' name='loanObligationRatio'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='nameVH'>
  <value>loanObligationRatio</value>
 </instance>
 <instance ref='typeVH'>
  <value>real</value>
 </instance>
 <instance ref='descriptionVH'>
  <value></value>
 </instance>
 <instance ref='termPropertyVH'>
 </instance>
 <instance ref='isNeededEventRuleVH'>
  <instance ref='__ENTITY_PROPERTIES__VH__'>
  </instance>
  <instance ref='calculationVH'>
   <value>tempLoanObligationRatio is a real initially -111111;
anApplicant is some Applicant;
totalIncome is a real initially 0;
totalLiability is a real initially 0;
for each Applicant in theApplicationScoreCard.termSetInput.request.application.applicants such that(it.applicantType is known and it.applicantType is equal to "P" )
do{
  			anApplicant =it;
		  	//totalLiability is a real initially 0;
  			aLiability is some Liability;
  			if(anApplicant.liabilities is known) then {
          		for each Liability in anApplicant.liabilities such that(it.considerForObligations is known and it.considerForObligations = true) 
            	do {
               			aLiability=it;             
            		    totalLiability = totalLiability + aLiability.principalOutstanding;
             		}
            	}
  				totalLiability = totalLiability + theApplicationScoreCard.termSetInput.request.application.loanDetails.loanAmount;
  	
  				if (anApplicant.incomes is unknown) then {
                  	tempLoanObligationRatio =-111111;
                }
  				else{                  		
  						totalIncome = totalIncome + anApplicant.annualIncome.totalIncome;
                  		tempLoanObligationRatio =totalLiability/totalIncome;
                }  			
}
it.loanObligationRatio = tempLoanObligationRatio;
theApplicationScoreCard.termSetInput.charNameToCharVal["Loan Obligation to Income Multiplier"] = it.loanObligationRatio as a string;</value>
  </instance>
 </instance>
 <instance ref='constraintContainerVH'>
  <instance-selection ref='constraintVH'>
   <item template='Atv03JffIeVVgsPZppyIx4mkGHC.template5' id='H0lUyt'>
    <instance ref='fromVH'>
     <value></value>
    </instance>
    <instance ref='toVH'>
     <value></value>
    </instance>
    <instance ref='constraintNameVH'>
     <value>Range</value>
    </instance>
    <instance ref='constraintEntriesVH'>
    </instance>
   </item>
  </instance-selection>
  <instance ref='termTypeConstraintTemplateAssocVH'>
   <value>Atv03JffIeVVgsPZppyIx4mkGHC.template5</value>
  </instance>
 </instance>
</instantiation>