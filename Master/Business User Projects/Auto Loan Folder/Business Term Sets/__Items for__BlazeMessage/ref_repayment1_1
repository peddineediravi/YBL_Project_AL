<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='DSG71szD5AH5G0pcZCfjmcoPvq0' name='ref_repayment1'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='nameVH'>
  <value>ref_repayment1</value>
 </instance>
 <instance ref='typeVH'>
  <value>boolean</value>
 </instance>
 <instance ref='descriptionVH'>
  <value></value>
 </instance>
 <instance ref='termPropertyVH'>
 </instance>
 <instance ref='isNeededEventRuleVH'>
  <instance ref='__ENTITY_PROPERTIES__VH__'>
  </instance>
  <instance ref='calculationVH'>
   <value><![CDATA[theBlazeMessageBT.ref_repayment1=false;
tenure is an integer initially 0;
tenure=theBlazeMessageBT.termSetInput.request.application.loanDetails.tenure;
print("Tenure=="theBlazeMessageBT.termSetInput.request.application.loanDetails.tenure);
anApplicant is some Applicant;
print("inside refinance Repayment");
for each Applicant in theBlazeMessageBT.termSetInput.request.application.applicants do{
  				anApplicant = it;
  if( anApplicant.liabilities  is known) then {  
  		for each Liability in anApplicant.liabilities such that(
           it.considerForObligations is known and it.considerForObligations =true and
           it.typeOfLoanProduct is known and it.typeOfLoanProduct is equal to (ignoring case) ("22" or "23" or "24"
             or "3" or "19070502" or "19070503" or "19070504" or "19070505"))do  {
         if(  ( it.noOfEMIs is known and it.noOfEMIs<12 )  or (it.peakDPD is known and it.peakDPD>30) or
             (it.loanClosureDate is known) and (theBlazeMessageBT.termSetInput.request.application.applicationInfo.dateOfReceipt.subtractInMonths(it.loanClosureDate)) >6 months
            or
          ( it.noOfEMIsPaid is known and  it.noOfBounces > (2*(math().truncate(it.noOfEMIsPaid)/12))) or
         (it.noOfEMIsPaid is known and it.noOfEMIsPaid>=0 
          and (it.noOfEMIsPaid/it.noOfEMIs<0.5 and it.noOfEMIsPaid<12)) )then{
  		 theBlazeMessageBT.ref_repayment1=true;
         }
        }    
        }
		}
print("repaymentNorms_refinancee1 " theBlazeMessageBT.ref_repayment1);

]]></value>
  </instance>
 </instance>
 <instance ref='constraintContainerVH'>
  <instance-selection ref='constraintVH'>
   <item template='Atv03JffIeVVgsPZppyIx4mkGHC.template5' id='FRf7p3'>
    <instance ref='fromVH'>
     <value></value>
    </instance>
    <instance ref='toVH'>
     <value></value>
    </instance>
    <instance ref='constraintNameVH'>
     <value>Range</value>
    </instance>
    <instance ref='constraintEntriesVH'>
    </instance>
   </item>
  </instance-selection>
  <instance ref='termTypeConstraintTemplateAssocVH'>
   <value>Atv03JffIeVVgsPZppyIx4mkGHC.template5</value>
  </instance>
 </instance>
</instantiation>