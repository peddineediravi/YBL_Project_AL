<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='DSG71szD5AH5G0pcZCfjmcoPvq0' name='LiabilityRepayment'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='nameVH'>
  <value>LiabilityRepayment</value>
 </instance>
 <instance ref='typeVH'>
  <value>boolean</value>
 </instance>
 <instance ref='descriptionVH'>
  <value></value>
 </instance>
 <instance ref='termPropertyVH'>
 </instance>
 <instance ref='isNeededEventRuleVH'>
  <instance ref='__ENTITY_PROPERTIES__VH__'>
  </instance>
  <instance ref='calculationVH'>
   <value><![CDATA[PrimaryLiabilcount is an integer initially 0;
anApplicant is some Applicant;
PrimaryLiabilcount1 is an integer initially 0;
theBlazeMessageBT.LiabilityRepayment=false;
loanoutstanding is a real initially 0;
tempinsuranceAmt is a real initially 0.0;
ReqLoanAMount is a real initially 0.0;

if (theBlazeMessageBT.termSetInput.request.application.assetDetails.detailAssetLoan.insuranceAmt   is  (known and available) )then{
      tempinsuranceAmt =tempinsuranceAmt+theBlazeMessageBT.termSetInput.request.application.assetDetails.detailAssetLoan.insuranceAmt ;
    }else{ tempinsuranceAmt =0;     }

for each Applicant in theBlazeMessageBT.termSetInput.request.application.applicants do{
anApplicant=it;	
  if(anApplicant.applicantType="P" and anApplicant.liabilities.count=0 )then{
    PrimaryLiabilcount=PrimaryLiabilcount+1;
  }
  if( anApplicant.applicantType is (known and available) and anApplicant.applicantType<>"P" and anApplicant.liabilities.count=0 )then{
    PrimaryLiabilcount1=PrimaryLiabilcount1+1;
  }
  for each Liability in anApplicant.liabilities do {
   if( it.considerForObligations is known and it.considerForObligations =true and           
          it.typeOfLoanProduct is equal to (ignoring case)("19070502" or "03" or "24" or "19070503" or 
                "19070505" or  "19070504" or "04" or "09" or "22" or "23" or "37" or "38" or "TW LOAN"
                   or "USED CAR" or "25"  or "34" or "39" or "36" or "CR LOAN" or "29" ) and it.noOfEMIsPaid  > 12  and it.loanAmount is (known and available) and
           ( it.loanClosureDate is unknown or (it.loanClosureDate is (known and available) and ( theBlazeMessageBT.termSetInput.request.application.applicationInfo.dateOfReceipt.subtractInDays(it.loanClosureDate) <365 days))) )then{
           	loanoutstanding=loanoutstanding+it.loanAmount;
  }
 }
}
    ReqLoanAMount = theBlazeMessageBT.termSetInput.request.application.loanDetails.loanAmount-tempinsuranceAmt;

if(  (loanoutstanding<0.5*ReqLoanAMount) or (  (PrimaryLiabilcount>=1 and theBlazeMessageBT.termSetInput.request.application.applicants.count=1) or
   (PrimaryLiabilcount>=1 and PrimaryLiabilcount1>=1and theBlazeMessageBT.termSetInput.request.application.applicants.count=1 ))) then{
theBlazeMessageBT.LiabilityRepayment=true;  
}
print("LiabilityRepayment==="theBlazeMessageBT.LiabilityRepayment);]]></value>
  </instance>
 </instance>
 <instance ref='constraintContainerVH'>
  <instance-selection ref='constraintVH'>
   <item template='Atv03JffIeVVgsPZppyIx4mkGHC.template5' id='AUdkxN'>
    <instance ref='fromVH'>
     <value></value>
    </instance>
    <instance ref='toVH'>
     <value></value>
    </instance>
    <instance ref='constraintNameVH'>
     <value>Range</value>
    </instance>
    <instance ref='constraintEntriesVH'>
    </instance>
   </item>
  </instance-selection>
  <instance ref='termTypeConstraintTemplateAssocVH'>
   <value>Atv03JffIeVVgsPZppyIx4mkGHC.template5</value>
  </instance>
 </instance>
</instantiation>