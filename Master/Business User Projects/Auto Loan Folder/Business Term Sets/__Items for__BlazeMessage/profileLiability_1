<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='DSG71szD5AH5G0pcZCfjmcoPvq0' name='profileLiability'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='nameVH'>
  <value>profileTransporter</value>
 </instance>
 <instance ref='typeVH'>
  <value>boolean</value>
 </instance>
 <instance ref='descriptionVH'>
  <value></value>
 </instance>
 <instance ref='termPropertyVH'>
 </instance>
 <instance ref='isNeededEventRuleVH'>
  <instance ref='__ENTITY_PROPERTIES__VH__'>
  </instance>
  <instance ref='calculationVH'>
   <value><![CDATA[theBlazeMessageBT.profileTransporter =false;
tempEmiPaidCount  is a integer  initially 0;
EmiPaidCount  is a integer  initially 0;
EmiPaidCountList is some array of integer initially an array of integer ;
anApplicant is some Applicant;
for each Applicant in theBlazeMessageBT.termSetInput.request.application.applicants do{
  anApplicant =it;
  for each Liability in anApplicant.liabilities do{
    	 if( it.considerForSurrogate is (known and available) and it.considerForSurrogate="Y")then{
           print("EmiPaidCount="EmiPaidCount);
           	EmiPaidCount=EmiPaidCount+it.noOfEMIsPaid;
          	EmiPaidCountList.append(EmiPaidCount);
           
           
         }
  }
  
}
print("EmiPaidCountList.count="EmiPaidCountList.count);
if(EmiPaidCountList.count>0)then{
tempEmiPaidCount =EmiPaidCountList.max;
}
if (tempEmiPaidCount  is (known and available)  and tempEmiPaidCount >=24 )then{
  theBlazeMessageBT.profileTransporter=true
}else if (tempEmiPaidCount  is (known and available)  and tempEmiPaidCount <24 )then{
  theBlazeMessageBT.profileTransporter =false;
}
print("theBlazeMessageBT.profileLiability =="theBlazeMessageBT.profileTransporter );]]></value>
  </instance>
 </instance>
 <instance ref='constraintContainerVH'>
  <instance-selection ref='constraintVH'>
   <item template='Atv03JffIeVVgsPZppyIx4mkGHC.template5' id='FPaKhS'>
    <instance ref='fromVH'>
     <value></value>
    </instance>
    <instance ref='toVH'>
     <value></value>
    </instance>
    <instance ref='constraintNameVH'>
     <value>Range</value>
    </instance>
    <instance ref='constraintEntriesVH'>
    </instance>
   </item>
  </instance-selection>
  <instance ref='termTypeConstraintTemplateAssocVH'>
   <value>Atv03JffIeVVgsPZppyIx4mkGHC.template5</value>
  </instance>
 </instance>
</instantiation>