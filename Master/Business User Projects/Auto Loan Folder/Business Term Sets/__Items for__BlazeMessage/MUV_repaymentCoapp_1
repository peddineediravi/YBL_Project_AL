<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='DSG71szD5AH5G0pcZCfjmcoPvq0' name='MUV_repaymentCoapp'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='nameVH'>
  <value>MUV_repaymentCoapp</value>
 </instance>
 <instance ref='typeVH'>
  <value>boolean</value>
 </instance>
 <instance ref='descriptionVH'>
  <value></value>
 </instance>
 <instance ref='termPropertyVH'>
 </instance>
 <instance ref='isNeededEventRuleVH'>
  <instance ref='__ENTITY_PROPERTIES__VH__'>
  </instance>
  <instance ref='calculationVH'>
   <value><![CDATA[theBlazeMessageBT.MUV_repaymentCoapp=true;
  propsed_loan is a real initially 0;
loanAmount is an real initially 0;
count is an integer initially 0;
  anApplicant is some Applicant;
print("inside MUV Repayment");
if(theBlazeMessageBT.MUV_repayment=false)then{
for each Applicant in theBlazeMessageBT.termSetInput.request.application.applicants such that 
(it.applicantType is known and it.applicantType="C")
do {
  				anApplicant = it;
    if(anApplicant.liabilities  is (known and available)  and anApplicant.liabilities.count>0) then {  
    for each Liability in anApplicant.liabilities do {
            if(it.considerForObligations is known and it.considerForObligations =true )then{
              count=count+1;
            }
        if( count>=1 and  it.typeOfLoanProduct is known and it.typeOfLoanProduct is equal to (ignoring case) ("22" or "23" or "24" or "25" 
              or "03"  or "36" or "04" or  "4" or "39" or "UCL"  or "3" or "19070502" or "19070503" or "19070504" or "19070505")) then  {
     	if(it.loanAmount>=0 and it.loanAmount is known and theBlazeMessageBT.termSetInput.request.application.loanDetails.loanAmount>0 )then{
              					  propsed_loan=(it.loanAmount/theBlazeMessageBT.termSetInput.request.application.loanDetails.loanAmount);
            					}else {
              				propsed_loan=0; }        
              				print("numberofemi=="it.noOfEMIsPaid);
          					print("propsed_loan=="propsed_loan);
        	   print("count=="count);
          print("peakDPD=="peakDPD);
	  if((count>=1 and it.noOfEMIsPaid is known and it.noOfEMIsPaid<12 )  and (it.peakDPD is known and it.peakDPD>30) and
                (it.loanAmount is known and it.loanAmount>=0 and loanAmount>0 and (propsed_loan<0.5)) )then{
				theBlazeMessageBT.MUV_repaymentCoapp=false;
         		}
        }  
    }
      print("count_MUV"count);
		if(	count=0) then {theBlazeMessageBT.MUV_repaymentCoapp=false;}	
	
    }	
	else {theBlazeMessageBT.MUV_repaymentCoapp=false;}
}
}
print("MUV_repayment1 "theBlazeMessageBT.MUV_repaymentCoapp);
]]></value>
  </instance>
 </instance>
 <instance ref='constraintContainerVH'>
  <instance-selection ref='constraintVH'>
   <item template='Atv03JffIeVVgsPZppyIx4mkGHC.template5' id='XaeXFB'>
    <instance ref='fromVH'>
     <value></value>
    </instance>
    <instance ref='toVH'>
     <value></value>
    </instance>
    <instance ref='constraintNameVH'>
     <value>Range</value>
    </instance>
    <instance ref='constraintEntriesVH'>
    </instance>
   </item>
  </instance-selection>
  <instance ref='termTypeConstraintTemplateAssocVH'>
   <value>Atv03JffIeVVgsPZppyIx4mkGHC.template5</value>
  </instance>
 </instance>
</instantiation>