<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='DSG71szD5AH5G0pcZCfjmcoPvq0' name='isResidenceStable'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='nameVH'>
  <value>isResidenceStableOneYear</value>
 </instance>
 <instance ref='typeVH'>
  <value>boolean</value>
 </instance>
 <instance ref='descriptionVH'>
  <value>Applicant had owned house or a rented house with years at current address greater than 1 therefore applicant residence is stable</value>
 </instance>
 <instance ref='termPropertyVH'>
 </instance>
 <instance ref='isNeededEventRuleVH'>
  <instance ref='__ENTITY_PROPERTIES__VH__'>
  </instance>
  <instance ref='calculationVH'>
   <value><![CDATA[isResidenceStableOneYear=false;
isOwned is a boolean initially false;
isRentedAndMoreThan1Years is a boolean initially false;
anApplicant is some Applicant;


for each Applicant in theBlazeMessageBT.termSetInput.request.application.applicants do
{  
  anApplicant=it;
  if(anApplicant.addresses is known ) then { 
    for each Address in anApplicant.addresses do
   {
    if((it.propertyType is known )and ((it.propertyType is equal to (ignoring case)"O") 
    or (it.propertyType is equal to (ignoring case)"OP" ) or 
      (it.propertyType is equal to (ignoring case)"OWNERSHI" ) or
      (it.propertyType is equal to (ignoring case)"OWN_COAP" ) ) and (it.addressType is known) and
        	((it.addressType is equal to (ignoring case)"CURRES") or 			
          (it.addressType is equal to (ignoring case)"OFFICE") or      
           (it.addressType is equal to (ignoring case)"RESIOFF")          
        ))
    then 
		isOwned=true;
	else if( (it.propertyType is known and it.propertyType=("R" or "C" ) ) and (it.yearsAtCurrentAddress is known and it.yearsAtCurrentAddress>=1) and (it.addressType is equal to (ignoring case)"CURRES")) then 
		isRentedAndMoreThan1Years =true;
   }
}
}
if(isRentedAndMoreThan1Years or isOwned) then
isResidenceStableOneYear = true;
else
isResidenceStableOneYear = false; 
]]></value>
  </instance>
 </instance>
 <instance ref='constraintContainerVH'>
  <instance-selection ref='constraintVH'>
   <item template='Atv03JffIeVVgsPZppyIx4mkGHC.template5' id='JBaJBz'>
    <instance ref='fromVH'>
     <value></value>
    </instance>
    <instance ref='toVH'>
     <value></value>
    </instance>
    <instance ref='constraintNameVH'>
     <value>Range</value>
    </instance>
    <instance ref='constraintEntriesVH'>
    </instance>
   </item>
  </instance-selection>
  <instance ref='termTypeConstraintTemplateAssocVH'>
   <value>Atv03JffIeVVgsPZppyIx4mkGHC.template5</value>
  </instance>
 </instance>
</instantiation>