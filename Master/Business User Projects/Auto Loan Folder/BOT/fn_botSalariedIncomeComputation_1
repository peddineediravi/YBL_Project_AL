<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_botSalariedIncomeComputation'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_botSalariedIncomeComputation</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>void</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[
anApplicant is some Applicant;
anIncome is some Income;
aMultiplier is a integer initially 2;
//theBlazeMessageBT.maxEligibleAmount=0;

if(blazeMessage.request is known and blazeMessage.request.application is known and blazeMessage.request.application.applicants is known
   and blazeMessage.request.application.applicants.count >0)then{
  for each Applicant in blazeMessage.request.application.applicants such that(it.customerSegment is known and it.constitution is known and it.applicantType="P") do
  {
        anApplicant=it;  
        
    if(anApplicant.customerSegment="1" and anApplicant.constitution= "1") then { // Salaried Individual
       print("inside Salaried");
      // anApplicant.annualIncome = a ConsolidatedIncome;
    	anApplicant.annualIncome.totalIncome = 0;
        if( anApplicant.incomes is known and anApplicant.incomes.count > 0) then
      {
   	   for each Income in anApplicant.incomes such that(it.netIncome is known) do 
      {
        	anIncome=it;
        print("income_nikhil=="anIncome.netIncome);
        print("tot_nikh_income=="anApplicant.annualIncome.totalIncome);
                              anApplicant.annualIncome.totalIncome+=anIncome.netIncome*12;
        
      }
        print("Salaincome=="anApplicant.annualIncome.totalIncome);
      anApplicant.annualIncome.incomeBasedEligbileAmount = anApplicant.annualIncome.totalIncome *aMultiplier;
         theBlazeMessageBT.maxEligibleAmount=anApplicant.annualIncome.incomeBasedEligbileAmount ;
        print("EligibleBOT=="anApplicant.annualIncome.incomeBasedEligbileAmount );
    }   
 }
  }
}]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='TrEs9q'>
    <instance ref='ParameterNameVH'>
     <value>blazeMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>