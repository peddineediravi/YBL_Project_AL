<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_Apply_UsedCar_CibilRules'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_Apply_UsedCar_CibilRules</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>void</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[LogMessage("Calling CIBIL Score based rules...");
anDeviation is some Deviation initially an Deviation;
anApplicant is some Applicant;
//CIBIL Score rules
//for each Applicant in theMessage.request.application.applicants do {
//aDeviation = DT_UsedCar_CibilScoreRule(it,theMessage);
//fn_AppendDeviations(aDeviation);
//}
// CIBIL Bureau data based rules
apply RS_UsedCar_CibilRules(theMessage);


//gross calc 
//gross FD amount calc
grossFDAmount is a real initially 0.0;
isFDFlag is a boolean initially false;
for each Applicant in theMessage.request.application.applicants
 do{
	 	anApplicant=it; 
 		 if(anApplicant.FDDetails is known) then { 
		for each FDDetails in anApplicant.FDDetails do{
				   if(it.amount > 0 ) then{
							grossFDAmount+=it.amount;
		 					  }
                 }        
		}
   print("GrossFD=="grossFDAmount);
}	
if(grossFDAmount>=(theMessage.request.application.loanDetails.loanAmount)*0.5 and (grossFDAmount < theMessage.request.application.loanDetails.loanAmount))then{
  isFDFlag=true;
}

   for each Deviation in theMessage.response.applicationDecision.deviations do {
     print(" it.ruleID::"  it.ruleID "theMessage.request.application.schemeGrp::" theMessage.request.application.schemeGroup "isFDFlag::" isFDFlag);
      if( it.ruleID is known and it.ruleID =("Cibil004" or "Cibil005" ))then {
             if(theMessage.request.application.schemeGroup = "46" and isFDFlag is equal to true)then{
            anDeviation.ruleID="Cibil021";
            anDeviation.ruleName="Cibil derog case";
            anDeviation.ruleDescription="FD Funding";
            anDeviation.decisionResult = "Reject";
            anDeviation.reasonText = " 100% FD funding required for Cibil derog case";
            anDeviation.reasonCode = "Cibil021";
            anDeviation.overrideLevel ="L99";
            fn_AppendDeviations(anDeviation);      
    }    
        }
}
]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='CTr6SG'>
    <instance ref='ParameterNameVH'>
     <value>theMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>