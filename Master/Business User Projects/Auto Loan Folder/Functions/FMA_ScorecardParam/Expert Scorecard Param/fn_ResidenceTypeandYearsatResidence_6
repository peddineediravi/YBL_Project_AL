<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_ResidenceTypeandYearsatResidence'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_ResidenceTypeandYearsatResidence</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>integer</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value>print("ResidenceTypeandYearsatResidence");
anApplicant is some Applicant;
yearsatResidence is an real initially 0;
yearsatResidenceList  is some array of real initially an array of real;
//blazeMessage.request.application.applicants[0].addresses;
 for each Applicant in blazeMessage.request.application.applicants such that(it.applicantType is (known and available)  )do{
   	anApplicant =it;
   		for each Address in  anApplicant.addresses do{
        if( it.addressType is  (known and available) and  it.addressType=(ignoring case)"CURRES" )then{
        if(  it.propertyType  is  (known and available)  and  it.propertyType=(ignoring case) ("O" or "OWNERSHI" or  "OP" or "OWN_COAP"))then{
				
            if(it.yearsAtCity =unknown )then{
              it.yearsAtCity=0;
            }
            if(it.monthsAtCity = unknown)then{
              it.monthsAtCity =0;
            }
            if(it.yearsAtCity is known and it.monthsAtCity is known )then{
  				yearsatResidence =it.yearsAtCity*12+it.monthsAtCity;
              	yearsatResidenceList.append(yearsatResidence);
            }
		}else {
          yearsatResidence =-1;
          yearsatResidenceList.append(yearsatResidence);
          print(yearsatResidence"yearsatResidence");
        }
        
        }

        }
 }

print("yearsatResidenceList.max"yearsatResidenceList.max);
yearsatResidence=yearsatResidenceList.max;
//yearsatResidence=math().truncate(yearsatResidence)/12;
print("yearsatResidence"yearsatResidence);
;
return math().truncate(yearsatResidence);
</value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='AMY3wY'>
    <instance ref='ParameterNameVH'>
     <value>blazeMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>