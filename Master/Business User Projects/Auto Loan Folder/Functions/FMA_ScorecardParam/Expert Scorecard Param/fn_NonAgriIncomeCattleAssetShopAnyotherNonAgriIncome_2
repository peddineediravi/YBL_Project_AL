<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_NonAgriIncomeCattleAssetShopAnyotherNonAgriIncome'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_NonAgriIncomeCattleAssetShopAnyotherNonAgriIncome</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>real</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value>print("NonAgriIncomeCattleAssetShopAnyotherNonAgriIncome");
anyotherNonAgriIncome is an real  initially 0.0;
anApplicant is some Applicant;
//blazeMessage.request.application.applicants[0].incomes[0].amount;
for each Applicant in blazeMessage.request.application.applicants such that(it.applicantType is known and it.applicantType="P")do{
  	anApplicant =it;
  	 for each Income in anApplicant.incomes such that(it.head is known  and it.head is (known and available) and it.netIncome is (known and available)  )do{
       		if (it.head  = "NON-AGRI")then{
              		anyotherNonAgriIncome =it.netIncome;
            }
       
     }
}
print("NonAgriIncomeCattleAssetShopAnyotherNonAgriIncome is ="anyotherNonAgriIncome);
return anyotherNonAgriIncome;

</value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='9f7piX'>
    <instance ref='ParameterNameVH'>
     <value>blazeMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>