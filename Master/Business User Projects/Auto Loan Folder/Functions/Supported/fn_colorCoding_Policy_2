<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_colorCoding_Policy'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_colorCoding_Policy</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>void</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value>  print("inside colorpolicy");
AppFilterDeviation is some array of Deviation initially an array of Deviation;
STPFilterDeviation is some array of Deviation initially an array of Deviation;
for each Deviation in theMessage.response.applicationDecision.deviations such that (it is not null and it is known) do {
  AppFilterDeviation.append(it);
}
      for each Deviation in AppFilterDeviation do {
        print("RULEID=="it.ruleID);
          if(it.ruleID is known and it.ruleID=("STP005" or "STP008")) then {
            theMessage.response.applicationDecision.responseCode="Green";
                    }
               else if(it.ruleID is known and it.ruleID=("STP007")) then {
            theMessage.response.applicationDecision.responseCode="AMBER";
                    }
        else if(it.ruleID is known and it.ruleID=("STP006")) then { 
          theMessage.response.applicationDecision.responseCode="RED";
                    }

        
    }
for each Deviation in theMessage.response.applicationDecision.deviations such that (it is not null and it is known) do {
  STPFilterDeviation.append(it);
}
      for each Deviation in STPFilterDeviation do {
        print("RULEID=="it.ruleID);
          if(it.ruleID is known and it.ruleID=("STP005" or "STP008")) then {
            theMessage.response.applicationDecision.responseCode="Green";
                    }
        else if(it.ruleID is known and it.ruleID=("STP007")) then {
            theMessage.response.applicationDecision.responseCode="AMBER";
                    }
        else if(it.ruleID is known and it.ruleID=("STP006")) then { 
          theMessage.response.applicationDecision.responseCode="RED";
                    }

        
    }
print("responseCode=="theMessage.response.applicationDecision.responseCode);</value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='TwTaIb'>
    <instance ref='ParameterNameVH'>
     <value>theMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>