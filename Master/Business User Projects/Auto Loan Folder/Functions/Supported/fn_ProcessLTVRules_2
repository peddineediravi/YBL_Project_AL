<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_ProcessLTVRules'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>ProcessLTVRules</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>real</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[aDeviation is some Deviation initially a Deviation;

if(theBlazeMessageBT.termSetInput.invocation.lineOfBusiness = LineOfBusiness.AL) then
	DT_SchemeSpecificAddOnLTV();
else if(theBlazeMessageBT.termSetInput.invocation.lineOfBusiness = LineOfBusiness.UCL) then
	 DT_UsedCar_SchemeSpecificAddOnLtv();

if(theBlazeMessageBT.isLookUpNeeded= true) then
{	
            if(theBlazeMessageBT.termSetInput.invocation.lineOfBusiness = LineOfBusiness.AL) then {
              DT_LTVStandardGrid_RiskBased(theBlazeMessageBT.termSetInput.request.application.assetDetails.detailAssetLoan.riskCategory,theBlazeMessageBT.termSetInput.request.application.loanDetails.tenure);   
            }
  			else if(theBlazeMessageBT.termSetInput.invocation.lineOfBusiness = LineOfBusiness.UCL) then {
            	 DT_UsedCar_LTVStandardGrid_RiskBased(theBlazeMessageBT.termSetInput.request.application.assetDetails.detailAssetLoan.riskCategory,theBlazeMessageBT.termSetInput.request.application.loanDetails.tenure);     
            }    			
  					if(theBlazeMessageBT.standardLtv <> -999)then
                  	  {              
                  				//Additional Ltv case when we need to combine the Ltv from add on ltv and standard ltv grid
             					theBlazeMessageBT.standardLtv = theBlazeMessageBT.standardLtv +theBlazeMessageBT.ltvLookup ;
         				 }
    			else{
                  			//Follows Ltv grid when we need to take the ltv from standard grid
      						theBlazeMessageBT.standardLtv =theBlazeMessageBT.ltvLookup;
  						  }
    }

if(isCalledForLookup is true) then
  {
    return theBlazeMessageBT.standardLtv;
  }
else
  {
       //print("Actual LTV  " theBlazeMessageBT.actualLtv);
      // print("Standard LTV  " theBlazeMessageBT.standardLtv);
      // print("App level CIBIL Score 1" theBlazeMessageBT.appLevelCibilScore);
    
        if(theBlazeMessageBT.isLookUpNeeded is false) then
          {
               if(theBlazeMessageBT.actualLtv > theBlazeMessageBT.standardLtv ) then
                 {
                   			aDeviation = a Deviation;
                   			aDeviation.decisionResult ="OOP";
                   			aDeviation.overrideLevel="L4";
                   			aDeviation.reasonText="Actual LTV is Greater than standard ltv";               
                   			//fn_AppendDeviations(aDeviation);
                 }
          }
    
    	if(theBlazeMessageBT.termSetInput.invocation.lineOfBusiness = LineOfBusiness.AL) then
			aDeviation =  DT_LTVDeviations();
		else if(theBlazeMessageBT.termSetInput.invocation.lineOfBusiness = LineOfBusiness.UCL) then
			aDeviation =  DT_UsedCar_LTVDeviations();
    	
        fn_AppendDeviations(aDeviation);
       return 0;
  }

]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='GB4jsl'>
    <instance ref='ParameterNameVH'>
     <value>isCalledForLookup</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>boolean</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>