<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_L99toL3'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_L99toL3</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>void</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[print("printing ExtraL99 to L3");
KERLANIP is a boolean initially false;
BankingMax is a boolean initially false;
reasonTextLength is an integer initially 0;
anDeviation is some Deviation initially an Deviation;
tempArray is some array of string initially an array of string;
AppFilterDeviation is some array of Deviation initially an array of Deviation;
if(blazeMessage.request.application.product="ALN" and blazeMessage.request.application.scheme<>"616")then{
   
for each Deviation in blazeMessage.response.applicationDecision.deviations such that (it is not null and it is known) do {
  AppFilterDeviation.append(it);
}
 
if (theBlazeMessageBT.appLevelCibilScore is (known and available) and theBlazeMessageBT.appLevelCibilScore>=700 and  blazeMessage.response.applicationDecision.responseCode is equal to (ignoring case)("GREEN" or "AMBER" or "BROWN"))then{
       	for each Deviation in AppFilterDeviation do {
          print("it.ruleID="it.ruleID);
          if(blazeMessage.request.application.loanDetails.assesmentMethod is (known and available) and 
		  blazeMessage.request.application.loanDetails.assesmentMethod<>(ignoring case)"ONAM")then{
			if(it.ruleID is known and (it.ruleID <> ("Common005" and  "Common080"  and "Common035" and "Banking025" and "Agri6"
   			   and "Banking002" and "Agri10" and "Agri12" and "KerelaNIP001" and "KerelaNIP002" and "KerelaNIP004" and 
              "KerelaNIP005" and "KerelaNIP006" and "KerelaNIP007" and "KerelaNIP010" and"KerelaNIP011" and "KerelaNIP012" and
              "KerelaNIP013" and "KerelaNIP014" and "KerelaNIP016" and "KerelaNIP017" and "KerelaNIP018" and "KerelaNIP020" and
              "KerelaNIP021" and "KerelaNIP022" and "KerelaNIP023" and "KerelaNIP024" and "Common111" and "Common112" or "KeralaNIP025" or "KeralaNIP026" or "KeralaNIP027") ) )then{
		          	  	     if(it.overrideLevel="L99" and it.decisionResult is equal to (ignoring case) "REJECT")then{
                     		it.overrideLevel ="L3";
      						it.decisionResult="Deviation";
                               reasonTextLength=(it.reasonText).length();
it.reasonText=portable().subString(it.reasonText,8,reasonTextLength);
                       //       it.reasonText=portable().compressString(it.reasonText,"REJECT");
//it.reasonText=portable().concat("", it.reasonText);
                           AppFilterDeviation.append(it);
							tempArray.append(it.ruleID);
                     }
                   }                  
                 }
              }
}
            }
print("Exit"  blazeMessage.response.applicationDecision.responseCode);

]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='EqSoBl'>
    <instance ref='ParameterNameVH'>
     <value>blazeMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>