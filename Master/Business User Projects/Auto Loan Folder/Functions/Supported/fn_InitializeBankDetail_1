<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_ConsolidatingBankStatements'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_ConsolidatingBankStatements</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>void</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[aStatement is some StatementDetails;
aBankDetails is some BankDetails;

	for each BankDetails  in anApplicant.bankDetails such that(it.bankStatements.count>0 and it.bankStatements is known) do{
          	aBankDetails=it;
      		aBankDetails.averageBalance=0;
      		aBankDetails.noOfCredits=0;
      		aBankDetails.noOfDebits=0;
      		aBankDetails.noOfInwardChequeReturns=0;
      		aBankDetails.noOfOutwardChequeReturns=0;
      		aBankDetails.noOfTransactions=0;
      		//aBankDetails.OldestStmtDate=aBankDetails.bankStatements[every StatementDetails].stmtDate.min;
            fn_SortingStatements(aBankDetails);
            print("Oldest stmt date "aBankDetails.OldestStmtDate);
		for each StatementDetails in aBankDetails.bankStatements do{
          
          print("Statment date "it.stmtDate);
          
		if(it.avgMonthlyBalance is known) then{
		aBankDetails.averageBalance+=it.avgMonthlyBalance;}

		if(it.noOfMonthlyCredits is known) then{
		aBankDetails.noOfCredits+=it.noOfMonthlyCredits;}

		if(it.noOfMonthlyDebits is known) then{
		aBankDetails.noOfDebits+=it.noOfMonthlyDebits;}

		if(it.inwardMonthlyChequeReturns is known) then{
		aBankDetails.noOfInwardChequeReturns+=it.inwardMonthlyChequeReturns;}
		
		if(it.outwardMonthlyChequeReturns is known) then{
		aBankDetails.noOfOutwardChequeReturns+=it.outwardMonthlyChequeReturns;}
          
          if(it.noOfMonthlyCredits is known) then{
		 aBankDetails.noOfTransactions+=it.noOfMonthlyCredits;}
          
          if(it.noOfMonthlyDebits is known) then{
		 aBankDetails.noOfTransactions+=it.noOfMonthlyDebits;}
          
          if(it.monthlyCreditAmt is known) then{
		 aBankDetails.totalCreditAmt+=it.monthlyCreditAmt;}
          
          if(it.monthlyDebitAmt is known) then{
		 aBankDetails.totalDebitAmt+=it.monthlyDebitAmt;}
          
          if(it.odccMonthlyLimit is known) then{
		 aBankDetails.odccLimitAmount+=it.odccMonthlyLimit;}
          
          if(it.odccMonthlyLimitUtilization is known) then{
		 aBankDetails.totalODCCLimitUtilization+=it.odccMonthlyLimitUtilization;}	
		}
      aBankDetails.averageBalance=aBankDetails.averageBalance/aBankDetails.bankStatements.count;
      }]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='HgV5Vs'>
    <instance ref='ParameterNameVH'>
     <value>anApplicant</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>Applicant</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>