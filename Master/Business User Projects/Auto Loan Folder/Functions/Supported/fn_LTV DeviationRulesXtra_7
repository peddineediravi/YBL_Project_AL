<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_LTV DeviationRulesXtra'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_LTV_DeviationRulesXtra</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>void</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[print("Entering fn_LTV_DeviationRulesXtra");
anDeviation is some Deviation initially an Deviation;
tempArray is some array of string initially an array of string;
AppFilterDeviation is some array of Deviation initially an array of Deviation;
LTVRules is a boolean initially false;
Preapprove is a boolean initially false;
KeralNIP is a boolean initially false;

for each Deviation in blazeMessage.response.applicationDecision.deviations such that (it is not null and it is known) do {
  AppFilterDeviation.append(it);
}
 for each Deviation in AppFilterDeviation do {
        if( it.reasonCode is known and it.reasonCode="99999" ) then{
          it.ruleID="99999";
        }
	
		if(it.ruleID is known and (it.ruleID="99999" )  )then{
			print("LTV RuleID=="it.ruleID);
          LTVRules=true;
			tempArray.append(it.ruleID);
		}
 }

if(blazeMessage.request.application.schemeGroup="15")then{
  Preapprove=true;
}
if(blazeMessage.request.application.schemeGroup="20" and blazeMessage.request.application.scheme="49")then{
  KeralNIP=true;
}

//if(LTVRules=false)then{
  if(theBlazeMessageBT.actualLtv>91 and theBlazeMessageBT.appLevelCibilScore>=-1  and
     theBlazeMessageBT.appLevelCibilScore<0 and 
  blazeMessage.request.application.schemeGroup=("13" or "143") and 
  blazeMessage.request.application.specialTieup<>("1204202101" and "103202101")
  )then{
     anDeviation.ruleID="LTV001";
            anDeviation.ruleName="EXCEPT KerlaNIp LTV";
            anDeviation.ruleDescription=" LTV rule checking";
            anDeviation.decisionResult = "Reject";
            anDeviation.reasonText = " LTV Norms not met";
            anDeviation.reasonCode = "LTV_20210410";
            anDeviation.overrideLevel ="L99";
            fn_AppendDeviations(anDeviation);      
    }    
  if(theBlazeMessageBT.actualLtv>96 and theBlazeMessageBT.appLevelCibilScore>600  and
          theBlazeMessageBT.appLevelCibilScore<701 and 
      blazeMessage.request.application.specialTieup<>("1204202101" and "103202101") and
    blazeMessage.request.application.schemeGroup=("13" or "143"))then{
     anDeviation.ruleID="LTV002";
            anDeviation.ruleName="EXCEPT KerlaNIp LTV2";
            anDeviation.ruleDescription=" LTV rule checking2";
            anDeviation.decisionResult = "Reject";
            anDeviation.reasonText = " LTV Norms not met";
            anDeviation.reasonCode = "LTV_20210411";
            anDeviation.overrideLevel ="L99";
            fn_AppendDeviations(anDeviation);      
    }    
 //}
    
]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='4YUlEE'>
    <instance ref='ParameterNameVH'>
     <value>blazeMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>