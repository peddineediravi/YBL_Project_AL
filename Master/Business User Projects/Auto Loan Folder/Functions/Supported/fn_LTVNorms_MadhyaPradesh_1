<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_LTVNorms_MadhyaPradesh'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_LTVNorms_MadhyaPradesh</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>void</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[print("Entering into fn_LTVNorms_MadhyaPradesh===== ");
anApplicant is some Applicant;
colourcode is a boolean initially false;
tempState is a boolean initially false;
LTVNormsMP  is a boolean initially false;
anDeviation is  some Deviation initially an Deviation;

if(blazeMessage.response.applicationDecision.responseCode is (known and available) and 
blazeMessage.response.applicationDecision.responseCode="AMBER")then{
colourcode=true;
}

for each Applicant in blazeMessage.request.application.applicants do{
  anApplicant=it;
  if(it.applicantType is (known and available) and 
    it.applicantType=(ignoring case)"P" and it.constitution is(known and available) and it.constitution<>"1") then{
    for each Address in anApplicant.addresses such that (it.addressType is (known and available) and it.addressType =("CURRES"))do{
       if(it.state is (known and available) and it.state ="11")then{
         tempState=true;
       }
    }
  }
}
if(colourcode=true and  tempState=true and  theBlazeMessageBT.appLevelCibilScore is (known and available) and 
theBlazeMessageBT.appLevelCibilScore<730)then{
  if(blazeMessage.request.application.assetDetails.detailAssetLoan.assetType is (known and available) and 
   blazeMessage.request.application.assetDetails.detailAssetLoan.assetType=(ignoring case) ("A3 RISK1" or "A3 RISK2" or "MUV RISK" or "MUVR1" ) and 
  theBlazeMessageBT.actualLtv is (known and available) and theBlazeMessageBT.actualLtv=80)then{
   				 anDeviation.ruleID="12354";
                anDeviation.ruleName="Care Case";
				 anDeviation.overrideLevel ="L3";
				anDeviation.decisionResult="REFER";
          		anDeviation.reasonText="LTV Norms for  MP not met";
          		fn_AppendDeviations(anDeviation);
  }
}]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='JOaLxp'>
    <instance ref='ParameterNameVH'>
     <value>blazeMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>