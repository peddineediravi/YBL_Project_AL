<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_SuppressDeviationMessagesBefore9March'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_SuppressDeviationMessagesBefore9March</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>void</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[print("Entering STPFilteration:::::");
arrayOfMessages is some array of string initially an array of string;
arrayOfDeviations is some array of Deviation initially an array of Deviation;
AppFilterDeviation is some array of Deviation initially an array of Deviation;
STPFilterDeviation is some array of Deviation initially an array of Deviation;
score is some Score ;
score = blazeMessage.response.applicationDecision.scorecardResult[0];

//////////Suppress L0,L1,L2,L99 and messages based on dateofreceipt and specialtieup//////////
print("dateOfReceipt::::"blazeMessage.request.application.applicationInfo.dateOfReceipt);
print("specialTieup:::"blazeMessage.request.application.specialTieup);
//if((blazeMessage.request.application.applicationInfo.dateOfReceipt is known and 
  //   blazeMessage.request.application.applicationInfo.dateOfReceipt >= '01-Feb-2021' and
  //  blazeMessage.request.application.applicationInfo.dateOfReceipt <= '09-Mar-2021') or 
  // (blazeMessage.request.application.specialTieup is known  and blazeMessage.request.application.specialTieup="103202101"))then{
  	// 	blazeMessage.response.applicationDecision.deviations=arrayOfDeviations  as a array of Deviation;  
  	//	blazeMessage.response.applicationDecision.messages=arrayOfMessages;
  	//	print("Messages:::"blazeMessage.response.applicationDecision.messages);
	//}
	
	if(blazeMessage.request.application.specialTieup is known  and blazeMessage.request.application.specialTieup="103202101")then{
		if(score.scorecardScore is known)then{
			score.scorecardScore=700;
      }
      print("score::::"score.scorecardScore);
	}
]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='9CbfK1'>
    <instance ref='ParameterNameVH'>
     <value>blazeMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>