<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_AppendDeviations'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_AppendDeviations</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>void</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value>
if(theBlazeMessageBT.termSetInput.invocation.lineOfBusiness="ALN" or theFMABT.termSetInput.invocation.lineOfBusiness="ALN")then{
if(deviation is known and deviation is not null and deviation.decisionResult is known ) then {  
  if(deviation.ruleID is equal to unknown and deviation.reasonText is known )then {
       if at most 0 Deviation in theBlazeMessageBT.termSetInput.response.applicationDecision.deviations satisfy (it.reasonText is known and it.reasonText=deviation.reasonText) then			
         	theBlazeMessageBT.termSetInput.response.applicationDecision.deviations.append(deviation);
    }
  else if(deviation.ruleID is equal to known)then {
      if at most 0 Deviation in theBlazeMessageBT.termSetInput.response.applicationDecision.deviations satisfy (it.ruleID is known and it.ruleID=deviation.ruleID) then{
        
        if(deviation.decisionResult is not equal to(ignoring case) "deviation") then
        {
          	if(deviation.reasonText.startsWith(deviation.decisionResult)= false) then {
              		deviation.reasonText=deviation.decisionResult"-"deviation.reasonText;
            }
        }        
			theBlazeMessageBT.termSetInput.response.applicationDecision.deviations.append(deviation);
    }
    }
  }
}else if(theBlazeMessageBT.termSetInput.invocation.lineOfBusiness="FMA" or theFMABT.termSetInput.invocation.lineOfBusiness="FMA")then{
  	fn_fma_AppendDeviations(deviation);
}</value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='VKtJ9i'>
    <instance ref='ParameterNameVH'>
     <value>deviation</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>Deviation</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>