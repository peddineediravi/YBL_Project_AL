<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_FMA_colorCode'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_FMA_colorCode</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>BlazeMessage</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[cibel is an integer initially 0;
cibel =fn_fma_appLevelCibilScore(blazeMessage);
anApplicant is some Applicant;
print(cibel"cibel");
Expertscorecard is an real initially 0;
BureauScorecard is an real initially 0;
Nonagri is a boolean initially false;
Nonagri=fn_nonAgri30PlusDpdin_last12months(blazeMessage);
agri is a boolean initially false;
agri=fn_Agri90PlusDpdin_last12months(blazeMessage);
if(  blazeMessage.request.application.scheme is (known and available) and  blazeMessage.request.application.scheme =("364" or "365" or "125" or "128" or  "130"))then{
if(blazeMessage.response.applicationDecision.scorecardResult[0].scorecardScore is (known and available) )then{
Expertscorecard=blazeMessage.response.applicationDecision.scorecardResult[0].scorecardScore
}
if(blazeMessage.response.applicationDecision.scorecardResult[1].scorecardScore is (known and available) )then{
BureauScorecard=blazeMessage.response.applicationDecision.scorecardResult[1].scorecardScore
}

if(cibel<=0 or cibel=(unknown or unavailable))then{
 blazeMessage.response.applicationDecision.responseCode="AMBER";
}
else {
if((Expertscorecard >=416 and Expertscorecard <=580) and (BureauScorecard>=508 and BureauScorecard<=591))then{
  blazeMessage.response.applicationDecision.responseCode="RED";
} else if(Expertscorecard >=662 and BureauScorecard>=665 and Nonagri=false and agri=false)then{
  blazeMessage.response.applicationDecision.responseCode="GREEN";
} else{
  blazeMessage.response.applicationDecision.responseCode="AMBER";
  }
}
}
//Suitfield
if( blazeMessage.response.applicationDecision.responseCode   is (known and available) and 
   blazeMessage.response.applicationDecision.responseCode ="GREEN")then{
  			for each Applicant in blazeMessage.request.application.applicants do{
              anApplicant =it;
              if(anApplicant.multiBureauReport is known and anApplicant.multiBureauReport.cibilResponse is known and anApplicant.multiBureauReport.cibilResponse.accounts is known and anApplicant.multiBureauReport.cibilResponse.accounts.count > 0) then{
       	           for each Account in anApplicant.multiBureauReport.cibilResponse.accounts do {
								
 						
			if((it.suitFiledOrWilfulDefault is (known and available) and it.suitFiledOrWilfulDefault is not null and it.suitFiledOrWilfulDefault <> "" )
							or (it.writtenOffAndSettled is (known and available) and it.writtenOffAndSettled >= 0))then {
									defaulter=defaulter+1;
				
 				 }
            }
		}
            }
}
if(defaulter is  (known and available)  and  defaulter >=1 )then{
  		 blazeMessage.response.applicationDecision.responseCode ="AMBER";
}
fn_colorCode_Red_Deviation(blazeMessage);
print("FMA_colorcode=="blazeMessage.response.applicationDecision.responseCode);
return  blazeMessage;]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='WKbAXn'>
    <instance ref='ParameterNameVH'>
     <value>blazeMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>