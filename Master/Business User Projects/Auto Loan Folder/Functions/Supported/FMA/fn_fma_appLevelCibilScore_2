<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_fma_appLevelCibilScore'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_fma_appLevelCibilScore</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>integer</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[appLevelCibilScore is an integer initially 0;
maxCibilList is some array of integer initially an array of integer ;
maxCibil is an integer initially 0;
anApplicant is some Applicant;
finalScore is an integer initially 0;
isCibilScore is an boolean initially false;
for each Applicant in blazeMessage.request.application.applicants do{
if (it.applicantType="P" ) then{
anApplicant=it;
if(it.multiBureauReport is known and it.multiBureauReport.cibilResponse is known and it.multiBureauReport.cibilResponse.scores.count > 0 )
then {
for each ScoreSegment in it.multiBureauReport.cibilResponse.scores such that 
(it.scoreName is  (known and available) and it.scoreName contains match  (ignoring case)"CIBIL" and
 it.score is (known and available))do{	
tempDate is a date;
print("tempDate=="tempDate);
print("Scoredare=="it.scoreDate);
if(tempDate is (unknown or unavailable) and finalScore is known) then{
tempDate = it.scoreDate;
finalScore = it.score;
} else if(it.scoreDate is known and tempDate is known and it.scoreDate > tempDate and it.score is known
)then{
print("tempDate1=="tempDate);
print("Scoredare1=="it.scoreDate);
tempDate = it.scoreDate;
finalScore = it.score;
} else if (it.scoreDate is known and tempDate is known and it.scoreDate=tempDate and it.score is known )then {
finalScore=math().max(finalScore, it.score);
}
if(finalScore is unknown)then {
finalScore=it.score;
}
}
}
}
}
print("FinalCibilScore=="finalScore);

return finalScore;
]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='9m6AWy'>
    <instance ref='ParameterNameVH'>
     <value>blazeMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>