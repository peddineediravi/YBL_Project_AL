<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_InitializeBlazeApplicant'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_InitializeBlazeApplicant</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>void</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value>LogMessage("fn_InitializeBlazeApplicant started.... ");

blazeMessage.blazeApplicants =  an array of BlazeApplicant;
anApplicant is some Applicant;

for each Applicant in blazeMessage.request.application.applicants such that( it.multiBureauReport is known and  it.multiBureauReport.cibilResponse.scores is known) do{
  anApplicant=it; 		
  for each ScoreSegment  in anApplicant.multiBureauReport.cibilResponse.scores do{
          		it.scoreName ="CIBIL";
        }
}

for each Applicant in blazeMessage.request.application.applicants  do {
     	 aBlazeApplicant is some BlazeApplicant initially it as a BlazeApplicant;
       	 blazeMessage.blazeApplicants.append(aBlazeApplicant);
}

//initialize scores inside BlazeApplicant
aBlazeApplicant is some BlazeApplicant;
for each BlazeApplicant in blazeMessage.blazeApplicants such that( it.multiBureauReport is known and  it.multiBureauReport.cibilResponse.scores is known)
do{
  		aBlazeApplicant = it;
  		aBlazeApplicant.scores = aBlazeApplicant.multiBureauReport.cibilResponse.scores;
  		//Extracting CibilScore from Score Segment List and assign to BlazeApplicant level
  		for each ScoreSegment  in aBlazeApplicant.multiBureauReport.cibilResponse.scores such that(it.scoreName is equal to (ignoring case)"CIBIL")
        do{
          		aBlazeApplicant.cibilScore=it.score;
        }
  //initialize paymentHistories
  		 blazeAccountsArr is some array of BlazeAccount initially an array of BlazeAccount;
  
		if(aBlazeApplicant.multiBureauReport is known and aBlazeApplicant.multiBureauReport.cibilResponse is known) then { 
			for each Account in aBlazeApplicant.multiBureauReport.cibilResponse.accounts
            do {
				aBlazeAccount is some BlazeAccount initially it as a BlazeAccount;
						fn_AssignPaymentHistories(aBlazeAccount);
							blazeAccountsArr.append(aBlazeAccount);              				
              				aBlazeAccount.isLoanAccount = DT_LoanAccounts(aBlazeAccount.accountType);
              				aBlazeAccount.isCreditCardAccount = (aBlazeAccount.accountType = "35" or aBlazeAccount.accountType="36" or aBlazeAccount.accountType="10");
			}
				aBlazeApplicant.blazeAccounts = blazeAccountsArr;
		}
}





LogMessage("fn_InitializeBlazeApplicant completed.... ");



</value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='YeA3gC'>
    <instance ref='ParameterNameVH'>
     <value>blazeMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>