<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_30PlusDPDInLast24Months'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_30PlusDPDInLast24Months</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>integer</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[print("Entering fn_30PlusDPDInLast24Months::::::::");
anApplicant is some Applicant;
historyLength is an integer initially 0;
numberOfMonths is an integer initially 0;
paymentHistory is a string initially "";
tempDPDIntArray is some array of integer initially an array of integer;
noOfDPDBounces is an integer initially 0;
//datetobeConsidered is a date initially calendar().currentDate();
isSecureProduct is a boolean initially false;
for each Applicant in blazeMessage.request.application.applicants do {
anApplicant =it; 
if(anApplicant.multiBureauReport is known and anApplicant.multiBureauReport.cibilResponse is known and 
anApplicant.multiBureauReport.cibilResponse.accounts is known and anApplicant.multiBureauReport.cibilResponse.accounts.count > 0) then {
for each Account in anApplicant.multiBureauReport.cibilResponse.accounts do {
				
	//if (it.dateReportedAndCertified is (known and available)) then { datetobeConsidered = it.dateReportedAndCertified; }
  //print("Days:::::::::"blazeMessage.request.application.applicationInfo.dateOfReceipt.subtractInMonths(it.dateReportedAndCertified).days);
  print("it.dateReportedAndCertified::::"it.dateReportedAndCertified);
	if (blazeMessage.request.application.applicationInfo.dateOfReceipt is (known and available) and blazeMessage.request.application.applicationInfo.dateOfReceipt<>unknown and 
        it.dateReportedAndCertified is (known and available) and it.dateReportedAndCertified <>unknown and 
    	(blazeMessage.request.application.applicationInfo.dateOfReceipt.subtractInDays(it.dateReportedAndCertified).days > 0) and 
			(blazeMessage.request.application.applicationInfo.dateOfReceipt.subtractInDays(it.dateReportedAndCertified).days <= 730) )then {
      	print("HAI::::::::");
			if(it.paymentHistory1 is (known and available)) then {
				paymentHistory = it.paymentHistory1;
			}
		if(it.paymentHistory2 is (known and available)) then {
			paymentHistory = paymentHistory.concat(it.paymentHistory2);
		}
		historyLength = paymentHistory.length();
		numberOfMonths = math().truncate(historyLength/3);
		paymentHistory = paymentHistory.replaceAll("X","0");
		paymentHistory = paymentHistory.replaceAll("DDD", "000");
		paymentHistory = paymentHistory.replaceAll("LSS", "180");
		paymentHistory = paymentHistory.replaceAll("SUB", "180");
		paymentHistory = paymentHistory.replaceAll("DBT", "180");
		paymentHistory = paymentHistory.replaceAll("SMA", "089");
		paymentHistory = paymentHistory.replaceAll("STD", "000");

		monthCounter is a integer initially 0;
		pos1 is an integer initially 0;
		pos2 is an integer initially 3;
		dpdValue is an integer initially 0;
		tempIntArray is some array of integer initially an array of integer;
		while(monthCounter <= numberOfMonths-1) do {
			dpdValue=paymentHistory.substring(pos1, pos2) as an integer;
			tempIntArray.append(dpdValue);
			pos1=pos2;
			pos2=pos2+3;
			monthCounter+=1;
		}
		dpdArrCount is an integer initially 0;
		if(tempIntArray.count > 0) then {
			while(dpdArrCount < math().min(tempIntArray.count, months)) do{	
			if(tempIntArray[dpdArrCount] >= 30) then {
			noOfDPDBounces = noOfDPDBounces +1;
			}
			dpdArrCount = dpdArrCount +1;
		}
	}
	}
}
}

 }

//print("noOfDPDBounces::::::::::"noOfDPDBounces);
return noOfDPDBounces;]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value><![CDATA[returns no of DPD in last 24 months between Date of Application Receipt  and CIBIL Accountâ€™s Date Reported & Certified]]></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='Fq3loE'>
    <instance ref='ParameterNameVH'>
     <value>blazeMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='2usoT9'>
    <instance ref='ParameterNameVH'>
     <value>months</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>integer</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>