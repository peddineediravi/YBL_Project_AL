<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_PreProcessing'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_PreProcessing</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>BlazeMessage</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[LogMessage("fn_PreProcessing started.... ");
aDeviation is some Deviation initially a Deviation;
response is some Response initially a Response;
blazeMessage.response = response;
appDecision is some Decision initially a Decision;
blazeMessage.response.applicationDecision = appDecision;
blazeMessage.response.applicationDecision.rcuResponse = a RCUResponse;
blazeMessage.response.applicationDecision.rcuResponse.completionApprovalDetails = an array of RCUApprovalDetails;
theBlazeMessageBT.termSetInput=blazeMessage;
theFMABT.termSetInput=blazeMessage;
theDataValidation.termSetInput=blazeMessage;
theApplicationScoreCard.termSetInput=blazeMessage;
fn_InitializeBlazeApplicant(blazeMessage);
fn_CalculateDerivedVariables(blazeMessage);

//Initialize association for scorechard characteristics
theApplicationScoreCard.termSetInput.charNameToCharVal = an association from string to string;
fn_assetType_spilt(blazeMessage);
LogMessage("fn_PreProcessing completed.... ");

fn_accountTypeHandle(blazeMessage);
fn_enquirypurposeHandler(blazeMessage);


//if application branch=7 the ALN scorecard will run
if(blazeMessage.request.application.product is (known and available) and
  blazeMessage.request.application.product=(ignoring case)("ALN" or "AL" ))then{
  if(blazeMessage.request.application.applicationInfo.applicationBranch is (known and available) and
    blazeMessage.request.application.applicationInfo.applicationBranch="7")then{
    apply fn_CalculateScoreCardScore(blazeMessage);
  }
}

//UCL 

if(theBlazeMessageBT.termSetInput.invocation.lineOfBusiness="UCL" and blazeMessage.request.application.applicationInfo.whetherChildID is (known and available)
and blazeMessage.request.application.applicationInfo.whetherChildID="Y" and blazeMessage.request.application.schemeGroup  is (known and available) 
and blazeMessage.request.application.schemeGroup<>( "245" and "246" ))then{
 
 
             aDeviation.ruleID="91001";
             aDeviation.ruleName="LTV Norms";
             aDeviation.ruleDescription="Child ID wrongly selected as Yes for the case";
             aDeviation.decisionResult = "Deviation";
             aDeviation.reasonText = "Child ID wrongly selected as Yes for the case";
             aDeviation.reasonCode = "91001";
             aDeviation.overrideLevel ="L99";
             fn_AppendDeviations(aDeviation);  
}
if(theBlazeMessageBT.termSetInput.invocation.lineOfBusiness="UCL"  and blazeMessage.request.application.applicationInfo.whetherChildID is (known and available) and
blazeMessage.request.application.applicationInfo.whetherChildID<>"Y" and blazeMessage.request.application.schemeGroup  is (known and available) and
 blazeMessage.request.application.schemeGroup =( "245" or "246" ))then{
 
 
             aDeviation.ruleID="91002";
             aDeviation.ruleName="Child ID Should";
             aDeviation.ruleDescription="Child ID Should be Yes for the selected variant of Topup loan";
             aDeviation.decisionResult = "Deviation";
             aDeviation.reasonText = "Child ID Should be Yes for the selected variant of Topup loan";
             aDeviation.reasonCode = "91002";
             aDeviation.overrideLevel ="L99";
             fn_AppendDeviations(aDeviation);  
}
return blazeMessage;]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='IUP4fE'>
    <instance ref='ParameterNameVH'>
     <value>blazeMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>