<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_applicantProfileDetails'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_applicantProfileDetails</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>void</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[tempAge is a real initially 0.0;
tempRelationShip is a string initially "";
//primary Applicant
  			for each Applicant in ablazeMessage.request.application.applicants  such that (it.applicantType  is (known and available) and it.applicantType ="P")do{
              
              if(it.constitution  is (known and available) and  it.constitution ="1" and  it.customerSegment  is (known and available) and it.customerSegment ="1")then{
                   	if(it.dateOfBirth is (known and available))then {
					tempAge=(calendar().currentDate().subtractInMonths(it.dateOfBirth).months/12);
                  	fn_AppendActionMessage("Applicant is "it.firstName " " it.lastName " aged  "portable().toInteger(tempAge) " years and is salaried");
                }
            }else  	if(it.constitution  is (known and available) and  it.constitution ="1"  and it.customerSegment  is (known and available) and it.customerSegment ="3")then{
                   	if(it.dateOfBirth is (known and available))then {
					tempAge=(calendar().currentDate().subtractInMonths(it.dateOfBirth).months/12);
					 fn_AppendActionMessage("Applicant is "it.firstName " " it.lastName " aged  "portable().toInteger(tempAge) "years and is is self employed non professional");
                }
            }else  	if((it.constitution  is (known and available) and  it.constitution ="1"  ) and ( it.customerSegment  is (known and available) and it.customerSegment ="2"))then{
                   	if(it.dateOfBirth is (known and available))then {
					tempAge=(calendar().currentDate().subtractInMonths(it.dateOfBirth).months/12);
					fn_AppendActionMessage("Applicant is "it.firstName " " it.lastName " aged  "portable().toInteger(tempAge) "years and is is self employed  professional");
                }
            }else if (it.constitution  is (known and available) and  it.constitution <>"1"   )then{
              		if(it.dateOfInception is (known and available))then {
                        tempAge=(calendar().currentDate().subtractInMonths(it.dateOfInception).months/12);
                      fn_AppendActionMessage("Applicant is M/s  is "it.firstName " " it.lastName " incoprorated on  "it.dateOfInception "Applicant is into the business of "it.businessDetails.industry " !");
                    }
              
            }
}
//Co-Applicant

for each Applicant in ablazeMessage.request.application.applicants  such that (it.applicantType  is (known and available) and it.applicantType <>"P")do{
              
  			   if(it.relation is (known and available))then {
                  			if(it.relation =(ignoring case)("BROTHER"))then{
                  			tempRelationShip ="BROTHER";
            	    }else if(it.relation =(ignoring case)("BIL"))then{
                  			tempRelationShip ="BROTHER IN LAW";
            	    }else if(it.relation =(ignoring case)("DAU"))then{
                  			tempRelationShip ="DAUGHTER";
            	    }else if(it.relation =(ignoring case)("DIL"))then{
                  			tempRelationShip =" DAUGHTER IN LAW ";
            	    }else if(it.relation =(ignoring case)("DIR"))then{
                  			tempRelationShip ="  DIRECTOR ";
            	    }else if(it.relation =(ignoring case)("FTH"))then{
                  			tempRelationShip ="  FATHER ";
            	    }else if(it.relation =(ignoring case)("FIL"))then{
                  			tempRelationShip =" FATHER IN LAW ";
            	    }else if(it.relation =(ignoring case)("MTH"))then{
                  			tempRelationShip =" MOTHER ";
            	    }else if(it.relation =(ignoring case)("MTH"))then{
                  			tempRelationShip =" MOTHER ";
            	    }else if(it.relation =(ignoring case)("PARTNER"))then{
                      	tempRelationShip =" PARTNER ";
            	    }else if(it.relation =(ignoring case)("PRF"))then{
                      	tempRelationShip ="  PROFESSIONAL RELATIONHIP ";
            	    }else if(it.relation =(ignoring case)("REL"))then{
                      	tempRelationShip ="PROPRIETOR ";
            	    }else if(it.relation =(ignoring case)("SIS"))then{
                      	tempRelationShip ="SISTER ";
            	    }else if(it.relation =(ignoring case)("SON"))then{
                      	tempRelationShip ="SON ";
            	    }else if(it.relation =(ignoring case)("SPS"))then{
                      	tempRelationShip ="SPOUSE ";
            	    }else if(it.relation =(ignoring case)("BPR "))then{
                      	tempRelationShip ="BUSINESS PARTNER  ";
            	    }else if(it.relation =(ignoring case)("COL "))then{
                      	tempRelationShip ="COLLEGUE";
            	    }else if(it.relation =(ignoring case)("CUS"))then{
                      	tempRelationShip ="CUSTOMER";
            	    }else if(it.relation =(ignoring case)("PERSONAL"))then{
                      	tempRelationShip ="PERSONAL-INDIVIDUAL";
            	    }else if(it.relation =(ignoring case)("SUP"))then{
                      	tempRelationShip ="SUPPLIER";
            	    }else if(it.relation =(ignoring case)("OTH"))then{
                      	tempRelationShip ="OTHER";
            	    }else if(it.relation =(ignoring case)("TRU"))then{
                      	tempRelationShip ="TRUSTEE";
            	    }else if(it.relation =(ignoring case)("KAR"))then{
                      	tempRelationShip ="KARTHA";
            	    }else if(it.relation =(ignoring case)("SOC"))then{
                      	tempRelationShip ="SOCIETY";
            	    }else if(it.relation =(ignoring case)("SEC"))then{
                      	tempRelationShip ="SECRETARY";
            	    }
                }
              if(it.constitution  is (known and available) and  it.constitution ="1" and  it.customerSegment  is (known and available) and it.customerSegment ="1")then{
                   	if(it.dateOfBirth is (known and available))then {
					tempAge=(calendar().currentDate().subtractInMonths(it.dateOfBirth).months/12);
                    }
             
                  	fn_AppendActionMessage("Co - Applicant is "it.firstName " " it.lastName " aged  "portable().toInteger(tempAge) " years and is salaried . Co-applicant is " tempRelationShip);
              //  }
            }else  	if(it.constitution  is (known and available) and  it.constitution ="1"  and it.customerSegment  is (known and available) and it.customerSegment ="3")then{
                   	if(it.dateOfBirth is (known and available))then {
					tempAge=(calendar().currentDate().subtractInMonths(it.dateOfBirth).months/12);
					 fn_AppendActionMessage("Co - Applicant is "it.firstName " " it.lastName " aged  "portable().toInteger(tempAge) "years and is is self employed non professional .  Co-applicant is " tempRelationShip);
                }
            }else  	if((it.constitution  is (known and available) and  it.constitution ="1"  ) and ( it.customerSegment  is (known and available) and it.customerSegment ="2"))then{
                   	if(it.dateOfBirth is (known and available))then {
					tempAge=(calendar().currentDate().subtractInMonths(it.dateOfBirth).months/12);
					fn_AppendActionMessage("Co - Applicant is "it.firstName " " it.lastName " aged  "portable().toInteger(tempAge) "years and is is self employed  professional  Co-applicant is " tempRelationShip);
                }
            }else if (it.constitution  is (known and available) and  it.constitution <>"1"   )then{
              		if(it.dateOfInception is (known and available))then {
                        tempAge=(calendar().currentDate().subtractInMonths(it.dateOfInception).months/12);
                      fn_AppendActionMessage("Co - Applicant is M/s  is "it.firstName " " it.lastName " incoprorated on  "it.dateOfInception "Applicant is into the business of "it.businessDetails.industry " !");
                    }
              
            }
}]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='GcLsgx'>
    <instance ref='ParameterNameVH'>
     <value>ablazeMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>