<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_UtilizationForOpeninstallmentTradesVerifiedInPast12Months_in34s'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_UtilizationForOpeninstallmentTradesVerifiedInPast12Months_in34s</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>real</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value>print("Entering fn_UtilizationForOpeninstallmentTradesVerifiedInPast12Months_in34s");
UtilizationForOpeninstallmentTradesVerifiedInPast12Months_in34s  is a real;
	anApplicant is some Applicant;
	for each Applicant in blazeMessage.request.application.applicants do{
			anApplicant =it;
		
			if(anApplicant.multiBureauReport is known and anApplicant.multiBureauReport.cibilResponse is (known and available) ) then{
				      
                             	if (anApplicant.multiBureauReport.cibilResponse.cvVariables.variable6 is (known and available)  ) then {
												UtilizationForOpeninstallmentTradesVerifiedInPast12Months_in34s = it.multiBureauReport.cibilResponse.cvVariables.variable6;
								}else{
                                  				UtilizationForOpeninstallmentTradesVerifiedInPast12Months_in34s =-999;
                                }
			   
            }
    }
	print("UtilizationForOpeninstallmentTradesVerifiedInPast12Months_in34s="UtilizationForOpeninstallmentTradesVerifiedInPast12Months_in34s);
blazeMessage.charNameToCharVal["UtilizationForOpenInstallmentTradesVerifiedInPast12Months_in34s"] = UtilizationForOpeninstallmentTradesVerifiedInPast12Months_in34s  as a string;
	return UtilizationForOpeninstallmentTradesVerifiedInPast12Months_in34s;</value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='5xRPbp'>
    <instance ref='ParameterNameVH'>
     <value>blazeMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>