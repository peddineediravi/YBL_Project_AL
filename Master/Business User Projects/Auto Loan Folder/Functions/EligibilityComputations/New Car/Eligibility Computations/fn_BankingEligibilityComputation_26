<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_BankingEligibilityComputation'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_BankingEligibilityComputation</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>void</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[anApplication is some Application initially blazeMessage.request.application;
isSingleApplicantMeetsMinimumNorms is a boolean initially false;
assetDetails is some AssetDetails initially anApplication.assetDetails;
theBlazeMessageBT.maxEligibleAmount = 0;
maxEligibleAmount is a real initially 0;   		
ltvFromGrid is a real initially 0;
ltvFromGrid = ProcessLTVRules(true)/100;

if(blazeMessage.request.application.assetDetails.detailAssetLoan.insuranceAmt is known)then{
  blazeMessage.request.application.assetDetails.detailAssetLoan.insuranceAmt=blazeMessage.request.application.assetDetails.detailAssetLoan.insuranceAmt;
}else{
  blazeMessage.request.application.assetDetails.detailAssetLoan.insuranceAmt=0;
}

assetDetails.newVehicleDetails.totalCashPrice=assetDetails.newVehicleDetails.assetCost+blazeMessage.request.application.assetDetails.detailAssetLoan.accessoriesCost;
//Banking Program schemes
if(anApplication.schemeGroup is known and anApplication.schemeGroup = "20") then
  {
       if(anApplication.scheme is known and assetDetails.newVehicleDetails is known and assetDetails.newVehicleDetails.totalCashPrice is known and anApplication.scheme = "50") then { // Only banking
        if(theBlazeMessageBT.appLevelCibilScore is (known and available) and theBlazeMessageBT.appLevelCibilScore>=700)then {
         maxEligibleAmount=math().min(assetDetails.newVehicleDetails.totalCashPrice*0.75, 1000000);    
               }else{
                 maxEligibleAmount=math().min(assetDetails.newVehicleDetails.totalCashPrice*0.75, 750000);
               }
       }
    else if (anApplication.scheme is known and assetDetails.newVehicleDetails is known and assetDetails.newVehicleDetails.totalCashPrice is known and anApplication.scheme = "495") then { // Banking Low ltv
         maxEligibleAmount=math().min(assetDetails.newVehicleDetails.totalCashPrice*0.55, 1000000);    
           }
else  if(anApplication.scheme is known and anApplication.scheme = "52") then { // BANKING AND REPAYMENT
        anApplicant is some Applicant;
         existingLoanAmount is a real initially 0;
        	if(anApplication.applicants is known and anApplication.applicants.count > 0)then{
              		 for each Applicant in anApplication.applicants do {  
                		  anApplicant=it;
             			  if(anApplicant.liabilities is known and anApplicant.liabilities.count > 0)then{
                            	for each Liability in anApplicant.liabilities such that  (it.typeOfLoanProduct is known and balanceTenure is known and balanceTenure > 0 and principalOutstanding is known and principalOutstanding > 0) do {
                 						existingLoanAmount = math().max(it.loanAmount,existingLoanAmount);
               			       }  
                           }               
           			   }
            }
  		print("existingLoanAmount="existingLoanAmount"theBlazeMessageBT.appLevelCibilScore"theBlazeMessageBT.appLevelCibilScore);
          if(existingLoanAmount > 0  ) then {
			if(  blazeMessage.request.application.loanDetails.assesmentMethod is (known and available)
			and blazeMessage.request.application.loanDetails.assesmentMethod<>"ONAM")then{
            if(theBlazeMessageBT.appLevelCibilScore is (known and available) and theBlazeMessageBT.appLevelCibilScore>750)then {
                 		 maxEligibleAmount=math().min(existingLoanAmount*1.5,2000000);   
        	 }
            else {
              maxEligibleAmount=math().min(existingLoanAmount*1.5,1500000);   
            }
          }  if(  blazeMessage.request.application.loanDetails.assesmentMethod is (known and available)
			and blazeMessage.request.application.loanDetails.assesmentMethod="ONAM")then{
            if (theBlazeMessageBT.IsYBlCustomer =true and theBlazeMessageBT.appLevelCibilScore is (known and available)
					and theBlazeMessageBT.appLevelCibilScore >=730)then{
						
						  maxEligibleAmount=math().min(existingLoanAmount*1.5,2000000);  
						  print("maxEligibleAmount  1.5,2000000 >=730"maxEligibleAmount);
					}else if (theBlazeMessageBT.IsYBlCustomer =false and theBlazeMessageBT.appLevelCibilScore is 
					(known and available)	and theBlazeMessageBT.appLevelCibilScore >=750)then{
						  maxEligibleAmount=math().min(existingLoanAmount*1.5,2000000);  
						  print("maxEligibleAmount  1.5,2000000  >=750 IsYBlCustomer flase"maxEligibleAmount);
					}else if (theBlazeMessageBT.IsYBlCustomer =true and theBlazeMessageBT.appLevelCibilScore is
					(known and available)and theBlazeMessageBT.appLevelCibilScore < 730)then{
						  maxEligibleAmount=math().min(existingLoanAmount*1.5,1500000);  
						   print("maxEligibleAmount  1.5,2000000 IsYBlCustomer <730 true"maxEligibleAmount);
					}else if (theBlazeMessageBT.IsYBlCustomer =false and theBlazeMessageBT.appLevelCibilScore is 
					(known and available)	and theBlazeMessageBT.appLevelCibilScore < 750)then{
						  maxEligibleAmount=math().min(existingLoanAmount*1.5,1500000);  
						  print("maxEligibleAmount  1.5,2000000 IsYBlCustomer<750 false"maxEligibleAmount);
					}
				
			}
            	print("maxEligibleAmount if ="maxEligibleAmount);
		  }
          else{
            	print("maxEligibleAmount else ="maxEligibleAmount);
            		maxEligibleAmount=0;
            
          } 
       }

    
    	else if(anApplication.scheme is known and anApplication.scheme = "46") then { // BANKING AND OWNERSHIP
         if(theBlazeMessageBT.appLevelCibilScore is (known and available) and theBlazeMessageBT.appLevelCibilScore>=700 and theBlazeMessageBT.appLevelCibilScore<=725)then {
           maxEligibleAmount=math().min(assetDetails.newVehicleDetails.totalCashPrice*0.8,2000000);
       } else if(theBlazeMessageBT.appLevelCibilScore is (known and available) and theBlazeMessageBT.appLevelCibilScore>725)then {
           maxEligibleAmount=math().min(assetDetails.newVehicleDetails.totalCashPrice*0.85, 2000000);
       }else {
         maxEligibleAmount=math().min(assetDetails.newVehicleDetails.totalCashPrice*0.8, 1500000);
       }
          print("maxEligibleAmount==211="maxEligibleAmount);
        }     
    
    else if(anApplication.scheme is known and anApplication.scheme = "616") then { // Tamilnadu
         if(theBlazeMessageBT.appLevelCibilScore is (known and available) and theBlazeMessageBT.appLevelCibilScore<0)then {
           maxEligibleAmount=math().min(assetDetails.newVehicleDetails.totalCashPrice*0.75,800000);
       } else if(theBlazeMessageBT.appLevelCibilScore is (known and available) and theBlazeMessageBT.appLevelCibilScore>=0)then {
           maxEligibleAmount=math().min(assetDetails.newVehicleDetails.totalCashPrice*0.75, 1200000);
       }
          print("maxEligibleAmount==211="maxEligibleAmount);
        }     
    
    	else if(assetDetails.newVehicleDetails is known and assetDetails.newVehicleDetails.totalCashPrice is known and anApplication.scheme is known and anApplication.scheme = "49") then { // Kerala NIP
         if(blazeMessage.request.application.loanDetails.assesmentMethod="LPO")then{
          maxEligibleAmount=math().min(assetDetails.newVehicleDetails.totalCashPrice*0.80, 2000000); 
         }
          else if(blazeMessage.request.application.loanDetails.assesmentMethod="ONAM" and
                  blazeMessage.request.application.loanDetails.tenure<=60)then
            {
                 maxEligibleAmount=math().min(assetDetails.newVehicleDetails.totalCashPrice*0.95, 2000000); 
              }
          else if(blazeMessage.request.application.loanDetails.assesmentMethod<>"ONAM" and
                  blazeMessage.request.application.loanDetails.tenure>60)then
            {
                 maxEligibleAmount=math().min(assetDetails.newVehicleDetails.totalCashPrice*0.85, 2000000); 
              }
          else
            {
              maxEligibleAmount=math().min(assetDetails.newVehicleDetails.totalCashPrice*0.90, 2000000); 
            }
          
        }
		else if(blazeMessage.request.application.loanDetails.tenure <= 36 and anApplication.scheme is known and anApplication.scheme = "762")then {
           maxEligibleAmount=(assetDetails.newVehicleDetails.totalCashPrice*0.85);
       } else if(blazeMessage.request.application.loanDetails.tenure > 36 and anApplication.scheme is known and anApplication.scheme = "762")then {
           maxEligibleAmount=(assetDetails.newVehicleDetails.totalCashPrice*0.8);
       }
  }
print("maxEligibleAmount ===="maxEligibleAmount);
theBlazeMessageBT.maxEligibleAmount = maxEligibleAmount;]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='VTQleH'>
    <instance ref='ParameterNameVH'>
     <value>blazeMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>