<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_UCL_AgriBasedEligibilityComputation'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_UCL_AgriBasedEligibilityComputation</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>void</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[anApplication is some Application initially blazeMessage.request.application;
isSingleApplicantMeetsMinimumNorms is a boolean initially false;
assetDetails is some AssetDetails initially anApplication.assetDetails;
anApplicant is some Applicant;
maxamount is a real initially 0;
anIncome is some Income;
theBlazeMessageBT.maxEligibleAmount = 0;
maxEligibleAmount is a real initially 0;

if(blazeMessage.request.application is known and blazeMessage.request.application.applicants is known and  blazeMessage.request.application.applicants.count>0)then{
	for each Applicant in blazeMessage.request.application.applicants do {
				anApplicant=it;
				print("count=="anApplicant.incomes.count);
				if(anApplicant.incomes is known and anApplicant.incomes.count>0)then {
						for each Income in anApplicant.incomes such that(it.netIncome is known) do{
							anIncome=it;
						if(anIncome.head="119")then {
                              if(anIncome.frequency="A") then { //Annually
									anIncome.netIncome=anIncome.amount*1;
									maxamount=maxamount+anIncome.netIncome;
								}else if(anIncome.frequency="B") then{ //Bi-monthly
									anIncome.netIncome=anIncome.amount*24;
									maxamount=maxamount+anIncome.netIncome;
								}else if(anIncome.frequency="M") then { //Monthly
									anIncome.netIncome=anIncome.amount*12;
									maxamount=maxamount+anIncome.netIncome;
								}else if(anIncome.frequency="Q") then { //Quaterly
									anIncome.netIncome=anIncome.amount*4;
									maxamount=maxamount+anIncome.netIncome;
								}else if(anIncome.frequency="H") then { //Half Yearly
									anIncome.netIncome=anIncome.amount*2;
									maxamount=maxamount+anIncome.netIncome;
								}
						print("maxamount=="maxamount);
						anApplicant.annualIncome.totalIncome+=anIncome.netIncome;
							}
							
						}
							
	}
  }
}
theBlazeMessageBT.maxEligibleAmount=maxamount*2;]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='9CMS94'>
    <instance ref='ParameterNameVH'>
     <value>blazeMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>