<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_UCL_BankingEligibilityComputation'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_UCL_BankingEligibilityComputation</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>void</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[anApplication is some Application initially blazeMessage.request.application;
isSingleApplicantMeetsMinimumNorms is a boolean initially false;
insuramount is a real initially 0;
anApplicant is some Applicant;
         existingLoanAmount is a real initially 0;
assetDetails is some AssetDetails initially anApplication.assetDetails;
theBlazeMessageBT.maxEligibleAmount = 0;
maxEligibleAmount is a real initially 0;   		
assetcost is a real initially 0;
assetcostcalc is a real initially 0;

//assetCost Calculation
//if(theBlazeMessageBT.IsmorethanValuationAmount>0 and blazeMessage.request.application.assetDetails.usedVehicleDetails.blueBookPrice is known and
 // blazeMessage.request.application.assetDetails.usedVehicleDetails.blueBookPrice>=0)then{
//assetcostcalc= ((theBlazeMessageBT.IsmorethanValuationAmount-blazeMessage.request.application.assetDetails.usedVehicleDetails.blueBookPrice)/theBlazeMessageBT.IsmorethanValuationAmount);
//}
//print("assetcostcalc=="assetcostcalc);
  //if(theBlazeMessageBT.IsmorethanValuationAmount<blazeMessage.request.application.assetDetails.usedVehicleDetails.blueBookPrice)then{
  //assetcost=theBlazeMessageBT.IsmorethanValuationAmount;
//}
//else if(assetcostcalc<=0.35)then{
 //  assetcost=theBlazeMessageBT.IsmorethanValuationAmount;
//}
//else 
//assetcost=blazeMessage.request.application.assetDetails.usedVehicleDetails.blueBookPrice*1.35;
if(blazeMessage.request.application.assetDetails.detailAssetLoan.insuranceAmt is known)then{
 insuramount=blazeMessage.request.application.assetDetails.detailAssetLoan.insuranceAmt;
}else{
  insuramount=0;
}

assetcost=blazeMessage.request.application.assetDetails.detailAssetLoan.accessoriesCost+blazeMessage.request.application.assetDetails.newVehicleDetails.assetCost;
print("assetcost=="assetcost);
//Banking Program schemes
if(blazeMessage.request.application.schemeGroup="45")then
  {
//only Banking
    if(blazeMessage.request.application.scheme="163")then {
         maxEligibleAmount=math().min(assetcost*0.75, 1000000);    
        }
    //YBL Banking based
     if(blazeMessage.request.application.scheme="376")then {
         maxEligibleAmount=math().min(assetcost*0.75, 1000000);    
        }
    //Banking and Ownership
     if(blazeMessage.request.application.scheme="164")then {
         maxEligibleAmount=math().min(assetcost*0.85, 1200000);    
        }
   
    //YBL Banking Ownership
     if(blazeMessage.request.application.scheme="377")then {
         maxEligibleAmount=math().min(assetcost*0.85, 1500000);    
        }
    
    //KeralaNIP
    if(blazeMessage.request.application.scheme=("491"))then {
		if(blazeMessage.request.application.loanDetails.assesmentMethod is (known and available)
			and blazeMessage.request.application.loanDetails.assesmentMethod<>"ONAM")then{
        		// maxEligibleAmount=math().min(assetcost*0.80, 1000000); 
				if(theBlazeMessageBT.appLevelCibilScore is (known and available) and theBlazeMessageBT.appLevelCibilScore<=750)then{
      			if(blazeMessage.request.application.assetDetails.detailAssetLoan.assetType  is (known and available) and 
                   blazeMessage.request.application.assetDetails.detailAssetLoan.assetType =("A1 RISK1" or "A1 RISK2" or "A2 RISK1" or "A2 RISK2" or "A3 RISK1" or 
				   "A3 RISK2" or "EV A1R1" or "EV A1R2"  or "EV A2R1" or "EV A2R2" or "EV A3R1" or "EV A3R2" ))then{
                  //maxEligibleAmount=math().min(assetcost*0.80, 1000000); 
                  print("inisde LT750 assest cost*0.85 " assetcost*0.85);
				  maxEligibleAmount=math().min(assetcost*0.85, 1000000); 
					print("<>ONAM maxEligibleAmount A1-A4 inside LT750::::::::"maxEligibleAmount)				  
                }else if(blazeMessage.request.application.assetDetails.detailAssetLoan.assetType  is (known and available) and 
                   blazeMessage.request.application.assetDetails.detailAssetLoan.assetType =(  "EV A4R1" or "EV A4R2" or "A4 RISK1" or "A4 RISK2" or "MUV RISK" or "MUVR1" or "EV MUVR1" or "EV MUVR2"))then{
                  //	 maxEligibleAmount=math().min(assetcost*0.75, 1000000); 
					maxEligibleAmount=math().min(assetcost*0.80, 1000000);				  
					print("<>ONAM maxEligibleAmount mUV"maxEligibleAmount)						 
                  
                }
			}
			if(theBlazeMessageBT.appLevelCibilScore is (known and available) and theBlazeMessageBT.appLevelCibilScore>750)then{
              
      			if(blazeMessage.request.application.assetDetails.detailAssetLoan.assetType  is (known and available) and 
                   blazeMessage.request.application.assetDetails.detailAssetLoan.assetType =("A1 RISK1" or "A1 RISK2" or "A2 RISK1" or "A2 RISK2" or "A3 RISK1" or 
				   "A3 RISK2" or "EV A1R1" or "EV A1R2"  or "EV A2R1" or "EV A2R2" or "EV A3R1" or "EV A3R2" ))then{
                 // maxEligibleAmount=math().min(assetcost*0.85, 1250000);
					maxEligibleAmount=math().min(assetcost*0.90, 1500000);				  
					print("<>ONAM maxEligibleAmount A1-A4 inside GT750::::::::::"maxEligibleAmount)				  
                }else if(blazeMessage.request.application.assetDetails.detailAssetLoan.assetType  is (known and available) and 
                   blazeMessage.request.application.assetDetails.detailAssetLoan.assetType =(  "EV A4R1" or "EV A4R2" or "A4 RISK1" or "A4 RISK2" or "MUV RISK" or "MUVR1" or "EV MUVR1" or "EV MUVR2"))then{
                  	 //maxEligibleAmount=math().min(assetcost*0.80, 1250000);
						 maxEligibleAmount=math().min(assetcost*0.85, 1500000);
					print("<>ONAM maxEligibleAmount mUV"maxEligibleAmount)						 
                  
                }
			}
			}
			if(blazeMessage.request.application.loanDetails.assesmentMethod is (known and available)
			and blazeMessage.request.application.loanDetails.assesmentMethod="ONAM" )then{
				if(blazeMessage.request.application.assetDetails.detailAssetLoan.assetType  is (known and available) and 
                   blazeMessage.request.application.assetDetails.detailAssetLoan.assetType =("A1 RISK1" or "A1 RISK2" or "A2 RISK1" or "A2 RISK2" or "A3 RISK1" or "A3 RISK2"
                  	or "A4 RISK1" or "A4 RISK2"  or "EV A1R1" or "EV A1R2"  or "EV A2R1" or "EV A2R2" or "EV A3R1" or "EV A3R2"or "EV A4R1" or "EV A4R2" ))then{
					if(theBlazeMessageBT.appLevelCibilScore is (known and available)
					and theBlazeMessageBT.appLevelCibilScore < 731)then{
					maxEligibleAmount=math().min(assetcost*0.80, 800000); 
					print("=ONAM maxEligibleAmount A1-A4"maxEligibleAmount)	
					
					}else {
						maxEligibleAmount=math().min(assetcost*0.80, 1000000); 
					}						
                }else if(blazeMessage.request.application.assetDetails.detailAssetLoan.assetType  is (known and available) and 
                   blazeMessage.request.application.assetDetails.detailAssetLoan.assetType =("MUV RISK" or "MUVR1" or "EV MUVR1" or "EV MUVR2"))then{
                  	if(theBlazeMessageBT.appLevelCibilScore is (known and available)
					and theBlazeMessageBT.appLevelCibilScore < 731)then{
						maxEligibleAmount=math().min(assetcost*0.75, 800000); 
					}else {
						maxEligibleAmount=math().min(assetcost*0.75, 1000000); 
					}					
					print("=ONAM maxEligibleAmount MUV"maxEligibleAmount)							 
                  
                }
			}
            }
    //NIP LOW LTV
      if(blazeMessage.request.application.scheme="506")then {
         maxEligibleAmount=math().min(assetcost*0.75, 750000);    
        }
   
    //Banking and Repayment
     if(anApplication.scheme is known and anApplication.scheme = "165") then {
                	if(anApplication.applicants is known and anApplication.applicants.count > 0)then{
              		 for each Applicant in anApplication.applicants do {  
                		  anApplicant=it;
             			  if(anApplicant.liabilities is known and anApplicant.liabilities.count > 0)then{
                            	for each Liability in anApplicant.liabilities such that  (it.typeOfLoanProduct is known and balanceTenure is known and balanceTenure > 0 and principalOutstanding is known and principalOutstanding > 0) do {
                 						existingLoanAmount = math().max(it.loanAmount,existingLoanAmount);
               			       }  
                           }               
           			   }
            }
         if(existingLoanAmount > 0) then {
        		 maxEligibleAmount=math().min(existingLoanAmount*1.5,1500000);   
         }
          else{
            		maxEligibleAmount=0;
          } 
       }
  }
theBlazeMessageBT.maxEligibleAmount = maxEligibleAmount;
    
    
    ]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='VTQleH'>
    <instance ref='ParameterNameVH'>
     <value>blazeMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>