<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_UCL_MultiplerBasedRefinanceEligibilityComputataion'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_UCL_MultiplerBasedRefinanceEligibilityComputataion</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>void</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[
theBlazeMessageBT.maxEligibleAmount = 0;
maxEligibleAmount is a real initially 0;
multiplier is a real initially 0.0;
multiplierBasisAmount is a real initially 0.0;
principalAmount is a real initially 0.0;
surrogateprincipalAmount is a real initially 0.0;
cashinHand is a real initially 0.0;
anApplicant is some Applicant;

print("inside multiplier function");
for each Applicant in blazeMessage.request.application.applicants do{
  				anApplicant = it;
   for each Liability in anApplicant.liabilities such that ( (it.considerForSurrogate is known and it.considerForSurrogate="Y")
      		  and  it.typeOfLoanProduct is equal to (ignoring case)( "19070502" or "25" ) 
			  and (it.principalOutstanding is known and it.principalOutstanding>0) )do{
          		if( it.noOfEMIs is known and it.noOfEMIs>=0)then{
            		if(it.noOfEMIs>9 and it.noOfEMIs<=17)then multiplier=1.3;
            		else if(it.noOfEMIs>17 and it.noOfEMIs<=23)then multiplier=1.4;
            		else if(it.noOfEMIs>23)then multiplier=1.6;
            		else multiplier=0;
          		}
				multiplierBasisAmount=it.EMIAmount*multiplier*it.noOfEMIs;
				surrogateprincipalAmount=surrogateprincipalAmount+it.principalOutstanding;
                print("multiplier=="multiplier);
                 print("multiplierBasisAmount=="multiplierBasisAmount);
  				print("surrogateprincipalAmount=="surrogateprincipalAmount);
   
              }
        //Checking Prinicipal Amount for active PL/BL accounts
         for each Liability in anApplicant.liabilities such that(     it.typeOfLoanProduct is equal to (ignoring case)( "19070505" or "24" )  and 
           (it.noOfEMIs is known and it.noOfEMIs<3) and it.loanClosureDate is unknown)do{
           if(it.principalOutstanding is known and it.principalOutstanding>0) then {
             principalAmount=it.principalOutstanding+principalAmount;
           }
         }
    print("principalAmount=="principalAmount);
          }

maxEligibleAmount=multiplierBasisAmount-principalAmount;
print("maxEligibleAmount for multiplier="maxEligibleAmount);
theBlazeMessageBT.maxEligibleAmount=maxEligibleAmount;
print("MAxeligible=="theBlazeMessageBT.maxEligibleAmount);
cashinHand=maxEligibleAmount-surrogateprincipalAmount;
print("cashinHand=="cashinHand);
theBlazeMessageBT.usedCashinHand=cashinHand;
]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='Xc0Eo0'>
    <instance ref='ParameterNameVH'>
     <value>blazeMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>