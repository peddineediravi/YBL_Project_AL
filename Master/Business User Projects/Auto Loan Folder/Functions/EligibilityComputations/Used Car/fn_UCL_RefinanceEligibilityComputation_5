<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_UCL_RefinanceEligibilityComputation'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_UCL_RefinanceEligibilityComputation</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>void</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[anApplication is some Application initially blazeMessage.request.application;
isSingleApplicantMeetsMinimumNorms is a boolean initially false;
assetDetails is some AssetDetails initially anApplication.assetDetails;
anApplicant is some Applicant;
existingLoanAmount is a real initially 0;
theBlazeMessageBT.maxEligibleAmount=0;
maxEligibleAmount is a real initially 0;

if(blazeMessage.request.application.schemeGroup is known and (blazeMessage.request.application.schemeGroup="50" and anApplication.scheme="178" )) then
 {   
	for each Applicant in blazeMessage.request.application.applicants do {
    
    anApplicant=it;
      print("liabilitycount=="anApplicant.liabilities.count);
      
      
if(anApplicant.liabilities is known and anApplicant.liabilities.count>0)then{
  
  for each Liability in anApplicant.liabilities such that (it.typeOfLoanProduct is known and it.balanceTenure is known 
                and it.balanceTenure>0 and it.principalOutstanding is known and it.principalOutstanding>0)do{
    print("typeofproduct=="it.typeOfLoanProduct);
      print("Prinicipal=="it.principalOutstanding);
  print("BlTenu=="it.balanceTenure);
    print("Loanamount=="it.loanAmount);
    existingLoanAmount=math().max(it.loanAmount,existingLoanAmount);
   }
}
    }
 }
      theBlazeMessageBT.maxEligibleAmount =math().min(1000000,(1.5*existingLoanAmount));

 ]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='NAx2bO'>
    <instance ref='ParameterNameVH'>
     <value>blazeMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>