<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_FMA_PolicyLTV'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_FMA_PolicyLTV</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>void</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[implementLTV is a real initially 0.0;
HarvestorLTV is a real initially 0.0;
NewUsedLTV is a real initially 0.0;
policyLTV is a real initially 0;

if(blazeMessage.request.application.scheme="127")then{
  implementLTV=DT_ImplementLTVGrid(blazeMessage);
  if(implementLTV is (known and available))then{
    implementLTV=implementLTV;
    policyLTV=implementLTV;
  }else {implementLTV=0;
        }
  }
if(blazeMessage.request.application.scheme="126")then{
HarvestorLTV=DT_Harvestor(blazeMessage);
  if(  HarvestorLTV is (known and available))then{
 HarvestorLTV=HarvestorLTV;
    policyLTV=HarvestorLTV;
  }else{HarvestorLTV=0.0;
               }
 }
if(blazeMessage.request.application.assetDetails.detailAssetLoan.assetCategory is (known and available))then{
NewUsedLTV=DT_TractorVariantAndAssetGradeLTV(blazeMessage);
  if(NewUsedLTV is (known and available))then{
   NewUsedLTV=NewUsedLTV; 
    policyLTV=NewUsedLTV;
  }else{NewUsedLTV=0.0;
               }
}
print("HarvestorLTV=="HarvestorLTV);
print("implementLTV=="implementLTV);
print("NewUsedLTV=="NewUsedLTV);

if(policyLTV>0 and policyLTV is (known and available) )then{
  policyLTV=policyLTV;
}else{
  policyLTV=0;
}
print("theFMABT.ActualNFCF"theFMABT.ActualNFCF);
print("theFMABT.allowedNFCF"theFMABT.allowedNFCF);
print("theFMABT.NoDPD"theFMABT.NoDPD);
print("theFMABT.headIncome"theFMABT.headIncome"theFMABT.AgriCibi"theFMABT.AgriCibil);
print("theFMABT.Supplier"theFMABT.Supplier);
if(theFMABT.NoDPD=true)then{policyLTV=policyLTV+5;}
if(theFMABT.headIncome=true)then{policyLTV=policyLTV+5;}
if(theFMABT.AgriCibil=true)then{policyLTV=policyLTV+10;}
if( (theFMABT.ActualNFCF>=(theFMABT.allowedNFCF+0.4)))then{policyLTV=policyLTV+5;}
if(theFMABT.Supplier=true and blazeMessage.request.application.scheme="130")then{policyLTV=policyLTV+5;}
if(theFMABT.Supplier=true and blazeMessage.request.application.scheme="125")then{policyLTV=policyLTV+5;}
//Changes

if(blazeMessage.request.application.scheme="125" and policyLTV >80 and theFMABT.Supplier=true) then{
policyLTV=80;
}else if(blazeMessage.request.application.scheme="125" and policyLTV >75 and theFMABT.Supplier=false) then{
policyLTV=70;
}
if(blazeMessage.request.application.scheme="125" and policyLTV> 80) then{
policyLTV=80;
}

//Changes
//if(theFMABT.NoDPD=true  or (theFMABT.ActualNFCF>=(theFMABT.allowedNFCF+0.4)))then{policyLTV=policyLTV+5;}
//if(theFMABT.NoDPD=true  and blazeMessage.request.application.specialTieup="NDI" and (theFMABT.ActualNFCF>=(theFMABT.allowedNFCF+0.4)))then{
 // policyLTV=policyLTV+10;}


print("policyLTV_afteradding=="policyLTV);
print("theFMABT.Agriland"theFMABT.Agriland);
print(theFMABT.Tractorage"theFMABT.Tractorage");
if(blazeMessage.request.application.scheme="364" and theFMABT.Agriland<3)then{
  policyLTV=policyLTV-5;
}
if(blazeMessage.request.application.scheme="130" and theFMABT.Agriland<3)then{
	print("in side below 3 agriland");
  policyLTV=policyLTV-5;
}
if(blazeMessage.request.application.scheme="126" and theFMABT.Agriland>=2 and theFMABT.Agriland<=5 )then{
  policyLTV=policyLTV-5;
}
if(blazeMessage.request.application.scheme="126" and theFMABT.Agriland<2  and blazeMessage.request.application.loanDetails.assesmentMethod="REPEAT H")then{
  policyLTV=policyLTV-10;
}
if(blazeMessage.request.application.scheme=("126" or "125" or "127" or "128" or "130") and theFMABT.Tractorage>=61 and theFMABT.Tractorage<=90 )then{
  policyLTV=policyLTV-5;
  print("Tractorage"theFMABT.Tractorage);
}
if(blazeMessage.request.application.scheme=( "125" or "128" or "130" or"364"  or "365")  and blazeMessage.request.application.assetDetails.detailAssetLoan.hmr is (known and available) )then{
   if(blazeMessage.request.application.assetDetails.detailAssetLoan.hmr>200 and blazeMessage.request.application.assetDetails.detailAssetLoan.hmr<=300)then{
	policyLTV=policyLTV-5;
    print("hmr" blazeMessage.request.application.assetDetails.detailAssetLoan.hmr);
  
}else if(blazeMessage.request.application.assetDetails.detailAssetLoan.hmr>300 and blazeMessage.request.application.assetDetails.detailAssetLoan.hmr<=400)then{
  policyLTV=policyLTV-10;
  print("hmr 300 to 400");
}else{ 
 policyLTV=policyLTV;
 }
}
print("policyLTV_afterdeduction=="policyLTV);
if(policyLTV<=0)then{  policyLTV=0;}

theBlazeMessageBT.standardLtv=policyLTV/100;
print("policayStabardLTV=="theBlazeMessageBT.standardLtv);

fn_AppendActionMessage("Policy LTV value is:"theBlazeMessageBT.standardLtv*100); ]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='2WpPXg'>
    <instance ref='ParameterNameVH'>
     <value>blazeMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>