<?xml version='1.0' encoding='UTF-8'?>
<instantiation xmlns='http://www.blazesoft.com/instantiation' template='Q8jH6kHdOYIZ1uG0WKXqvvejqv0' name='fn_Farmheads'>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='1VBfZr8g32Q2FnSWcWO9txQWwEE' name='Instance' id='Instance'>
 </instantiation>
 <instantiation xmlns='http://www.blazesoft.com/instantiation' template='18uqQPJXnTmKrAiLEOVcQMUAFmD' name='Entry' id='Entry'>
  <instance ref='Source Reference'>
   <instance ref='value'>
    <instance ref='locationVH'>
     <value></value>
    </instance>
    <instance ref='repositoryNameVH'>
     <value></value>
    </instance>
    <instance ref='versionVH'>
     <value></value>
    </instance>
    <instance ref='filterVH'>
     <value></value>
    </instance>
    <instance ref='releaseDateVH'>
     <value></value>
    </instance>
    <instance ref='repositoryAccessVH'>
     <value></value>
    </instance>
   </instance>
  </instance>
  <instance ref='Predictive Model Type'>
   <instance ref='value'>
    <value>NotApplicable</value>
   </instance>
  </instance>
 </instantiation>
 <instance ref='__ENTITY_PROPERTIES__VH__'>
  <instance ref='Test Role'>
   <instance ref='value'>
    <value>None</value>
   </instance>
  </instance>
  <instance ref='Test Case'>
   <instance ref='value'>
    <value></value>
   </instance>
  </instance>
 </instance>
 <instance ref='InstanceName'>
  <value></value>
 </instance>
 <instance ref='FunctionNameVH'>
  <value>fn_Farmheads</value>
 </instance>
 <instance ref='FunctionReturnType'>
  <value>void</value>
 </instance>
 <instance ref='FunctionBodyVH'>
  <value><![CDATA[anApplicant is some Applicant;
anIncome is some FarmIncome;
aMultiplier is a integer initially 4;

if(blazeMessage.request is known and blazeMessage.request.application is known and blazeMessage.request.application.applicants is known and blazeMessage.request.application.applicants.count >0)then{
  		for each Applicant in blazeMessage.request.application.applicants such that(it.customerSegment is known and it.constitution is known) do
  {
        anApplicant=it;  
    if(anApplicant.customerSegment="10011")then{
       //anApplicant.annualIncome = a ConsolidatedIncome;
    	anApplicant.annualIncome.totalIncome = 0;
       if( anApplicant.farmIncomes is known and anApplicant.farmIncomes.count > 0) then {
   	   for each FarmIncome in anApplicant.farmIncomes such that(it.head is known and it.netIncome is known ) do 
      {
        	anIncome=it;
            if(anIncome.head = "D") then //Dairy 
                  anApplicant.annualIncome.totalIncome+=anIncome.netIncome;
        	else if(anIncome.head = "TRA4") then //Tractor - Upto 4 Years old
                  anApplicant.annualIncome.totalIncome+=anIncome.netIncome;
           else if(anIncome.head = "TRA8") then //Tractor - 4 Years to 8 Years Old
                  anApplicant.annualIncome.totalIncome+=anIncome.netIncome;       
           else if(anIncome.head = "TRA20") then //Tractor - 8 Years to 20 Years
                  anApplicant.annualIncome.totalIncome+=anIncome.netIncome;
             else if(anIncome.head = "CH") then //Combine Harvester
                  anApplicant.annualIncome.totalIncome+=anIncome.netIncome;       
           else if(anIncome.head = "TMH") then //Tractor mounted harvester â€“ Track Type
                  anApplicant.annualIncome.totalIncome+=anIncome.netIncome;
           else if(anIncome.head = "TMHW") then //Tractor mounted harvester â€“ Wheel Type
                  anApplicant.annualIncome.totalIncome+=anIncome.netIncome;
            else if(anIncome.head = "SH") then //Sugarcane Harvester
                  anApplicant.annualIncome.totalIncome+=anIncome.netIncome;
             else if(anIncome.head = "P") then //Poultry - Broiler (000 Chicks)
                  anApplicant.annualIncome.totalIncome+=anIncome.netIncome;
              else if(anIncome.head = "LS") then //TLarge shop- like Kirana shops/ restaurant etc 
                  anApplicant.annualIncome.totalIncome+=anIncome.netIncome;      
           else if(anIncome.head = "SS") then //Small Shops- Small Tea / Pan / Eatables / Service / Repair shops / Flour mill
                  anApplicant.annualIncome.totalIncome+=anIncome.netIncome;
            else if(anIncome.head = "SCV3") then //Small commercial vehicle (Three wheeler)
                  anApplicant.annualIncome.totalIncome+=anIncome.netIncome;       
           else if(anIncome.head = "SCV4") then //Small commercial vehicle (Four wheeler)
                  anApplicant.annualIncome.totalIncome+=anIncome.netIncome;
           else if(anIncome.head = "JCB") then //JCB
                  anApplicant.annualIncome.totalIncome+=anIncome.netIncome;
      }
         theBlazeMessageBT.applicationIncome=anApplicant.annualIncome.totalIncome;
      anApplicant.annualIncome.incomeBasedEligbileAmount = anApplicant.annualIncome.totalIncome *aMultiplier;
    }
}
  }
}]]></value>
 </instance>
 <instance ref='CommentsVH'>
  <value></value>
 </instance>
 <instance ref='FunctionParametersVH'>
  <instance-list ref='ParametersVH'>
   <item template='DRNZKQyw5rcjBd4Yxo6FN649lWN.template1' id='RtFxLA'>
    <instance ref='ParameterNameVH'>
     <value>blazeMessage</value>
    </instance>
    <instance ref='ParameterTypeVH'>
     <value>BlazeMessage</value>
    </instance>
   </item>
  </instance-list>
 </instance>
</instantiation>